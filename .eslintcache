[{"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\App.js":"1","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Home\\Home.js":"2","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Lesson\\components\\ModalDetail.js":"3","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Courses\\components\\ModalDetail.js":"4","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\DashBoard\\DashBoard.js":"5","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\index.js":"6","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\recoil\\appState.js":"7","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\DashBoard\\index.js":"8","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Login\\index.js":"9","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Login\\Login.js":"10","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\DashBoard\\Menu.js":"11","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\utils\\RestfulUtils.js":"12","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Users\\index.js":"13","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Lesson\\index.js":"14","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Courses\\index.js":"15","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Home\\index.js":"16","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Users\\Users.js":"17","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Lesson\\Lesson.js":"18","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Courses\\components\\CoursesTable.js":"19","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Lesson\\components\\LessonTable.js":"20","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Users\\components\\UsersTable.js":"21","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\RefillCoins\\RefillCoins.js":"22","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\RefillCoins\\components\\ModalDetail.js":"23","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\RefillCoins\\components\\RefillCoinsTable.js":"24","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Users\\components\\ModalDetail.js":"25","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Courses\\Courses.js":"26","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\RefillCoins\\index.js":"27","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\ThongKeDoanhSo\\ThongKeDoanhSo.js":"28","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\reportWebVitals.js":"29","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\ThongKeDoanhSo\\components\\Chart.js":"30","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\ThongKeDoanhSo\\components\\canvasjs.react.js":"31","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\ThongKeDoanhSo\\components\\canvasjs.min.js":"32","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\ThongKeDoanhSo\\components\\Char2.js":"33"},{"size":1458,"mtime":1608038113807,"results":"34","hashOfConfig":"35"},{"size":2857,"mtime":1608383941465,"results":"36","hashOfConfig":"35"},{"size":8591,"mtime":1608120165284,"results":"37","hashOfConfig":"35"},{"size":18068,"mtime":1608394687802,"results":"38","hashOfConfig":"35"},{"size":1001,"mtime":1608629110735,"results":"39","hashOfConfig":"35"},{"size":613,"mtime":1608038113829,"results":"40","hashOfConfig":"35"},{"size":127,"mtime":1608038113831,"results":"41","hashOfConfig":"35"},{"size":85,"mtime":1608038113817,"results":"42","hashOfConfig":"35"},{"size":73,"mtime":1608038113824,"results":"43","hashOfConfig":"35"},{"size":4500,"mtime":1608038113822,"results":"44","hashOfConfig":"35"},{"size":3554,"mtime":1608629071794,"results":"45","hashOfConfig":"35"},{"size":1729,"mtime":1608642321860,"results":"46","hashOfConfig":"35"},{"size":73,"mtime":1608038113827,"results":"47","hashOfConfig":"35"},{"size":76,"mtime":1608038113821,"results":"48","hashOfConfig":"35"},{"size":79,"mtime":1608038113814,"results":"49","hashOfConfig":"35"},{"size":52,"mtime":1608382032864,"results":"50","hashOfConfig":"35"},{"size":2002,"mtime":1608038113825,"results":"51","hashOfConfig":"35"},{"size":2001,"mtime":1608038113818,"results":"52","hashOfConfig":"35"},{"size":7444,"mtime":1608380724636,"results":"53","hashOfConfig":"35"},{"size":6757,"mtime":1608380724639,"results":"54","hashOfConfig":"35"},{"size":8297,"mtime":1608380724640,"results":"55","hashOfConfig":"35"},{"size":2008,"mtime":1608387641490,"results":"56","hashOfConfig":"35"},{"size":11204,"mtime":1608393605733,"results":"57","hashOfConfig":"35"},{"size":8777,"mtime":1608394486761,"results":"58","hashOfConfig":"35"},{"size":9601,"mtime":1608215490125,"results":"59","hashOfConfig":"35"},{"size":2003,"mtime":1608380724634,"results":"60","hashOfConfig":"35"},{"size":73,"mtime":1608387286409,"results":"61","hashOfConfig":"35"},{"size":3124,"mtime":1608651822701,"results":"62","hashOfConfig":"35"},{"size":375,"mtime":1608038113832,"results":"63","hashOfConfig":"35"},{"size":1256,"mtime":1608651674011,"results":"64","hashOfConfig":"35"},{"size":2080,"mtime":1598305982000,"results":"65","hashOfConfig":"35"},{"size":479376,"mtime":1607575701641,"results":"66","hashOfConfig":"35"},{"size":2235,"mtime":1608651370481,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"1vomx9l",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"75"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"75"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"71"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"71"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"75"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\App.js",["153","154"],"/** @format */\r\n\r\nimport DashBoard from './features/DashBoard';\r\nimport Login from './features/Login';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport { useRecoilState } from 'recoil';\r\nimport { loginState } from './recoil/appState';\r\nfunction App() {\r\n  //const login = true;\r\n  const [login, setLogin] = useRecoilState(loginState);\r\n\r\n  useEffect(() => {\r\n    const accessToken =\r\n      sessionStorage.getItem('accessToken') ||\r\n      localStorage.getItem('accessToken');\r\n    if (accessToken) {\r\n      setLogin(true);\r\n    } else {\r\n      setLogin(false);\r\n    }\r\n  }, [login]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Switch>\r\n          <Route exact path='/login'>\r\n            {!login ? <Login /> : <Redirect to='/' />}\r\n          </Route>\r\n          <Route path='/'>\r\n            {login ? <DashBoard /> : <Redirect to='/login' />}\r\n          </Route>\r\n        </Switch>\r\n\r\n        <ToastContainer\r\n          position='bottom-right'\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["155","156"],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Home\\Home.js",["157"],"import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport RestfulUtils from '../../utils/RestfulUtils';\r\n\r\nfunction Home(props) {\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n  const [totalCourses, setTotalCourses] = useState(0);\r\n  const [totalLessons, setTotalLessons] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const loadData = (url, setState) => {\r\n      RestfulUtils.get(url).then((res) => {\r\n        if (res.status == 200) {\r\n          setState(res.data.data.length);\r\n        } else {\r\n          if (res.code === 401) {\r\n            toast.error('Phiên bản hết hạn', { position: 'top-center' });\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    loadData('http://localhost:3030/users', setTotalUsers);\r\n    loadData('http://localhost:3030/courses', setTotalCourses);\r\n    loadData('http://localhost:3030/lessons', setTotalLessons);\r\n  }, []);\r\n  return (\r\n    <div className='container'>\r\n      <h1>DashBoard</h1>\r\n      <div className='panel panel-primary'>\r\n        <div className='panel-body'>\r\n          <div className='row'>\r\n            <div className='col-md-6 col-12'>\r\n              <div className='panel panel-primary'>\r\n                <div className='panel-heading'>\r\n                  <h3 className='panel-title'>Học viên</h3>\r\n                </div>\r\n                <div className='panel-body'>\r\n                  <div>Tổng số học viên: {totalUsers}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-6 col-12'>\r\n              <div className='panel panel-primary'>\r\n                <div className='panel-heading'>\r\n                  <h3 className='panel-title'>Khóa học</h3>\r\n                </div>\r\n                <div className='panel-body'>\r\n                  <div>Tổng số khóa học: {totalCourses}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-6 col-12'>\r\n              <div className='panel panel-primary'>\r\n                <div className='panel-heading'>\r\n                  <h3 className='panel-title'>Bài học</h3>\r\n                </div>\r\n                <div className='panel-body'>\r\n                  <div>Tổng số bài học: {totalLessons}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-6 col-12'>\r\n              <div className='panel panel-primary'>\r\n                <div className='panel-heading'>\r\n                  <h3 className='panel-title'>Tổng doanh thu</h3>\r\n                </div>\r\n                <div className='panel-body'>\r\n                  <div>Tổng số coin: 100000</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n",["158","159"],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Lesson\\components\\ModalDetail.js",["160","161","162","163","164"],"/** @format */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ModalDetail(props) {\r\n  const { show = false, DATA, isClear, change, handleClose, access, titleModal, load } = props;\r\n\r\n  const [dataGroup, setDataGroup] = useState({\r\n    _id: '',\r\n    title: '',\r\n    url: '',\r\n    priority: '',\r\n    status: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newDataGroup = {\r\n      ...dataGroup,\r\n      _id: DATA._id || '',\r\n      title: DATA.title || '',\r\n      url: DATA.url || '',\r\n      priority: DATA.priority || '',\r\n      status: DATA.status || false,\r\n    };\r\n\r\n    setDataGroup(newDataGroup);\r\n  }, [DATA, show]);\r\n\r\n  const onChange = (type, e) => {\r\n    const newDataGroup = { ...dataGroup };\r\n    newDataGroup[type] = e.target.value;\r\n    setDataGroup(newDataGroup);\r\n  };\r\n\r\n  const submitGroup = () => {\r\n    const data = {\r\n      ...dataGroup,\r\n    };\r\n    delete data._id;\r\n\r\n    if (access === 'ADD') {\r\n      RestfulUtils.post('http://localhost:3030/lessons', { ...data })\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            console.log(res);\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (access === 'EDIT') {\r\n      RestfulUtils.patch('http://localhost:3030/lessons/' + dataGroup._id, {\r\n        ...data,\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      RestfulUtils.remove('http://localhost:3030/lessons/' + dataGroup._id)\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const render = () => {\r\n    let xhtml = null;\r\n    if (access === 'DELETE') {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={handleClose}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div className={access == 'VIEW' ? 'col-md-12 disable' : 'col-md-12 '} style={{ paddingTop: '11px' }}>\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-12'>\r\n                      <h5 className='highlight'>\r\n                        <b>{`Bạn có chắc chắn muốn xóa ${dataGroup.title}`}</b>\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input type='button' onClick={submitGroup} className='btn btn-primary' style={{ marginRight: 15 }} value={'Submit'} id='btnSubmit' />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    } else {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={handleClose}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div className={access == 'VIEW' ? 'col-md-12 disable' : 'col-md-12 '} style={{ paddingTop: '11px' }}>\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Tên bài học</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Họ và tên'}\r\n                        id='txtTitle'\r\n                        value={dataGroup.title}\r\n                        onChange={(e) => onChange('title', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Url</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        // disabled={access == 'ADD' ? false : true}\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Url'}\r\n                        id='txtUrl'\r\n                        value={dataGroup.url}\r\n                        onChange={(e) => onChange('url', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Thứ tự</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={'Thứ tự'}\r\n                        id='txtPriority'\r\n                        value={dataGroup.priority}\r\n                        onChange={(e) => onChange('priority', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Trạng thái</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <select className='form-control' onChange={(e) => onChange('status', e)}>\r\n                        <option selected={dataGroup.status ? true : false} value='true'>\r\n                          Hoạt động\r\n                        </option>\r\n                        <option selected={!dataGroup.status ? true : false} value='false'>\r\n                          Khóa\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input type='button' onClick={submitGroup} className='btn btn-primary' style={{ marginRight: 15 }} value={'Submit'} id='btnSubmit' />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    }\r\n    return xhtml;\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <ToastContainer\r\n        position='bottom-right'\r\n        autoClose={2000}\r\n        closeOnClick\r\n        pauseOnHover\r\n      /> */}\r\n      {render()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDetail;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Courses\\components\\ModalDetail.js",["165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"/** @format */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nimport { toast } from 'react-toastify';\r\nimport Select from 'react-select';\r\n\r\nfunction ModalDetail(props) {\r\n  const { show = false, DATA, isClear, change, handleClose, access, titleModal, load } = props;\r\n\r\n  const [dataGroup, setDataGroup] = useState({\r\n    _id: '',\r\n    title: '',\r\n    description: '',\r\n    avatar: '',\r\n    teacher: '',\r\n    price: '',\r\n    lessons: [],\r\n    users: [],\r\n    status: false,\r\n  });\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [lessons, setLessions] = useState([]);\r\n  const [addUsers, setAddUsers] = useState([]);\r\n  const [addLessons, setAddLessons] = useState([]);\r\n  const [subUsers, setSubUsers] = useState([]);\r\n  const [subLessons, setSubLessons] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const newDataGroup = {\r\n      ...dataGroup,\r\n      _id: DATA._id || '',\r\n      title: DATA.title || '',\r\n      avatar: DATA.avatar || '',\r\n      description: DATA.description || '',\r\n      teacher: DATA.teacher || '',\r\n      price: DATA.price || '',\r\n      lessons: transactionState(DATA.lessons || []) || [],\r\n      users: transactionState(DATA.users || []) || [],\r\n      status: DATA.status || true,\r\n    };\r\n\r\n    setDataGroup(newDataGroup);\r\n\r\n    setSubLessons([]);\r\n    setSubUsers([]);\r\n    setAddUsers([]);\r\n    setAddLessons([]);\r\n  }, [DATA, show]);\r\n\r\n  const handleCloses = () => {\r\n    handleClose();\r\n  };\r\n  const transaction = (arr = [], key) => {\r\n    const newArr = arr.map((item) => {\r\n      return { value: item._id, label: item[key] };\r\n    });\r\n    return newArr;\r\n  };\r\n\r\n  const transactionState = (arr = []) => {\r\n    return arr.map((item) => item._id);\r\n  };\r\n\r\n  const transactionSelect = (arr = []) => {\r\n    return arr.map((item) => item.value);\r\n  };\r\n  useEffect(() => {\r\n    RestfulUtils.get('http://localhost:3030/users').then((res) => {\r\n      setUsers(res.data.data);\r\n    });\r\n    RestfulUtils.get('http://localhost:3030/lessons').then((res) => {\r\n      setLessions(res.data.data);\r\n    });\r\n  }, []);\r\n\r\n  const onChange = (type, e) => {\r\n    const newDataGroup = { ...dataGroup };\r\n    newDataGroup[type] = e.target.value;\r\n    setDataGroup(newDataGroup);\r\n  };\r\n\r\n  const onChangeSelect = (data, setSelect) => {\r\n    setSelect(data);\r\n  };\r\n\r\n  const submitGroup = () => {\r\n    const data = {\r\n      ...dataGroup,\r\n    };\r\n\r\n    const totalLesson = data.lessons.length;\r\n\r\n    data.totalLesson = totalLesson;\r\n    const newUsers = data.users\r\n      .filter((item) => {\r\n        console.log(!transactionSelect(subUsers || []).includes(item));\r\n        return !transactionSelect(subUsers || []).includes(item);\r\n      })\r\n      .concat(transactionSelect(addUsers || []));\r\n\r\n    const newLessons = data.lessons\r\n      .filter((item) => {\r\n        return !transactionSelect(subLessons || []).includes(item);\r\n      })\r\n      .concat(transactionSelect(addLessons || []));\r\n\r\n    data.lessons = newLessons;\r\n    data.users = newUsers;\r\n\r\n    delete data._id;\r\n\r\n    if (access === 'ADD') {\r\n      RestfulUtils.post('http://localhost:3030/courses', { ...data })\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            if (res.code === 401) {\r\n              toast.error('Phiên bản hết hạn', { position: 'top-center' });\r\n            } else {\r\n              toast.error(res.message);\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (access === 'EDIT') {\r\n      RestfulUtils.patch('http://localhost:3030/courses/' + dataGroup._id, {\r\n        ...data,\r\n      })\r\n        .then((res) => {\r\n          if ((res.status && res.status === 201) || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            if (res.code === 401) {\r\n              toast.error('Phiên bản hết hạn', { position: 'top-center' });\r\n            } else {\r\n              toast.error(res.message);\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      RestfulUtils.remove('http://localhost:3030/courses/' + dataGroup._id)\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            if (res.code === 401) {\r\n              toast.error('Phiên bản hết hạn', { position: 'top-center' });\r\n            } else {\r\n              toast.error(res.message);\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const render = () => {\r\n    let xhtml = null;\r\n    if (access === 'DELETE') {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={handleClose}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div className={access == 'VIEW' ? 'col-md-12 disable' : 'col-md-12 '} style={{ paddingTop: '11px' }}>\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-12'>\r\n                      <h5 className='highlight'>\r\n                        <b>{`Bạn có chắc chắn muốn xóa ${dataGroup.title}`}</b>\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input type='button' onClick={submitGroup} className='btn btn-primary' style={{ marginRight: 15 }} value={'Submit'} id='btnSubmit' />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    } else {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={() => handleCloses()}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto', height: '100%' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div className={access == 'VIEW' ? 'col-md-12 disable' : 'col-md-12 '} style={{ paddingTop: '11px' }}>\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Tên khóa học</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Tên khóa học'}\r\n                        id='txtTitle'\r\n                        value={dataGroup.title}\r\n                        onChange={(e) => onChange('title', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Giáo viên</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        // disabled={access == 'ADD' ? false : true}\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Giáo viên'}\r\n                        id='txtTeacher'\r\n                        value={dataGroup.teacher}\r\n                        onChange={(e) => onChange('teacher', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Url ảnh</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        // disabled={access == 'ADD' ? false : true}\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Url ảnh'}\r\n                        id='txtAvatar'\r\n                        value={dataGroup.avatar}\r\n                        onChange={(e) => onChange('avatar', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Mô tả</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      {access == 'VIEW' ? (\r\n                        <div style={{ minHeight: '100px' }} className='form-control'>\r\n                          dataGroup.description\r\n                        </div>\r\n                      ) : (\r\n                        <textarea\r\n                          //maxLength={255}\r\n                          className='form-control'\r\n                          // placeholder={'Mô tả'}\r\n                          rows='4'\r\n                          id='txtPrice'\r\n                          value={dataGroup.description}\r\n                          onChange={(e) => onChange('description', e)}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row' style={{ display: access == 'ADD' ? 'none' : 'block' }}>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b> {access == 'VIEW' ? 'Học viên' : ' Khai trừ học viên '}</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <Select\r\n                        closeMenuOnSelect={false}\r\n                        className='basic-multi-select'\r\n                        classNamePrefix='select'\r\n                        isMulti\r\n                        defaultValue={access == 'VIEW' ? transaction(DATA.users || [], 'username') : []}\r\n                        options={transaction(DATA.users || [], 'username')}\r\n                        onChange={(data) => onChangeSelect(data, setSubUsers)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row' style={{ display: access == 'VIEW' ? 'none' : 'block' }}>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Thêm học viên</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <Select\r\n                        closeMenuOnSelect={false}\r\n                        className='basic-multi-select'\r\n                        classNamePrefix='select'\r\n                        isMulti\r\n                        defaultValue={addUsers}\r\n                        options={transaction(users || [], 'username')}\r\n                        onChange={(data) => onChangeSelect(data, setAddUsers)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row' style={{ display: access == 'ADD' ? 'none' : 'block' }}>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>{access == 'VIEW' ? 'Bài học' : 'Khai trừ bài học'}</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <Select\r\n                        closeMenuOnSelect={false}\r\n                        className='basic-multi-select'\r\n                        classNamePrefix='select'\r\n                        isMulti\r\n                        defaultValue={access == 'VIEW' ? transaction(DATA.lessons || [], 'title') : []}\r\n                        options={transaction(DATA.lessons || [], 'title')}\r\n                        onChange={(data) => onChangeSelect(data, setSubLessons)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row' style={{ display: access == 'VIEW' ? 'none' : 'block' }}>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Thêm bài học</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <Select\r\n                        closeMenuOnSelect={false}\r\n                        className='basic-multi-select'\r\n                        classNamePrefix='select'\r\n                        isMulti\r\n                        options={transaction(lessons || [], 'title')}\r\n                        onChange={(data) => onChangeSelect(data, setAddLessons)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Tổng số học viên</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        disabled={true}\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={'Tổng số học viên'}\r\n                        id='txtPrice'\r\n                        value={dataGroup.users.length}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Tổng số bài học</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        disabled={true}\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={'Tổng số học viên'}\r\n                        id='txtPrice'\r\n                        value={dataGroup.lessons.length}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Giá cả</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={'Giá cả'}\r\n                        id='txtPrice'\r\n                        value={dataGroup.price}\r\n                        onChange={(e) => onChange('price', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Trạng thái</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <select className='form-control' onChange={(e) => onChange('status', e)}>\r\n                        <option selected={dataGroup.status ? true : false} value='true'>\r\n                          Hoạt động\r\n                        </option>\r\n                        <option selected={!dataGroup.status ? true : false} value='false'>\r\n                          Khóa\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input type='button' onClick={submitGroup} className='btn btn-primary' style={{ marginRight: 15 }} value={'Submit'} id='btnSubmit' />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    }\r\n    return xhtml;\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <ToastContainer\r\n        position='bottom-right'\r\n        autoClose={2000}\r\n        closeOnClick\r\n        pauseOnHover\r\n      /> */}\r\n      {render()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDetail;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\DashBoard\\DashBoard.js",["179","180"],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\index.js",[],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\recoil\\appState.js",[],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\DashBoard\\index.js",[],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Login\\index.js",[],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Login\\Login.js",["181","182"],"/** @format */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { loginState } from '../../recoil/appState';\r\nimport RestfulUtils from '../../utils/RestfulUtils';\r\nimport { toast } from 'react-toastify';\r\nimport { Checkbox } from 'react-bootstrap';\r\nfunction Login(props) {\r\n  const [login, setLogin] = useRecoilState(loginState);\r\n  const [dataGroup, setDataGroup] = useState({ username: '', password: '' });\r\n  const [remember, setRemember] = useState(false);\r\n  useEffect(() => {\r\n    const newDataGroup = { ...dataGroup, username: '', password: '' };\r\n    setDataGroup(newDataGroup);\r\n  }, []);\r\n\r\n  const onChange = (type, e) => {\r\n    const newDataGroup = { ...dataGroup };\r\n    newDataGroup[type] = e.target.value;\r\n    setDataGroup(newDataGroup);\r\n  };\r\n\r\n  const onChangeRemember = (e) => {\r\n    setRemember(e.target.value);\r\n  };\r\n\r\n  const submitGroup = () => {\r\n    const data = {\r\n      ...dataGroup,\r\n      strategy: 'local',\r\n    };\r\n\r\n    RestfulUtils.post('http://localhost:3030/authentication', { ...data })\r\n      .then((res) => {\r\n        if (!res.errors && res.status === 201) {\r\n          toast.success('Đăng nhập thành công');\r\n          sessionStorage.setItem('accessToken', res.data.accessToken);\r\n          sessionStorage.setItem('user', JSON.stringify(res.data.user));\r\n          if (remember) {\r\n            localStorage.setItem('accessToken', res.data.accessToken);\r\n            localStorage.setItem('user', JSON.stringify(res.data.user));\r\n          }\r\n\r\n          setLogin(true);\r\n        } else {\r\n          toast.error('Tài khoản hoặc mật khẩu không đúng');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('catch', error);\r\n      });\r\n  };\r\n  return (\r\n    <div\r\n      style={{ display: 'flex', justifyContent: 'center', marginTop: '150px' }}\r\n    >\r\n      <div\r\n        style={{\r\n          borderColor: 'rgba(123, 102, 102, 0.43)',\r\n          padding: '10px',\r\n        }}\r\n        className='panel col-md-6 col-12 panel-success'\r\n      >\r\n        <div className='title-content col-md-6'>Đăng nhập</div>\r\n        <div className='panel-body'>\r\n          <div className='add-info-account'>\r\n            <div className='col-md-12 ' style={{ paddingTop: '11px' }}>\r\n              <div className='col-md-12 row'>\r\n                <div className='col-md-3'>\r\n                  <h5 className='highlight'>\r\n                    <b>Tài khoản</b>\r\n                  </h5>\r\n                </div>\r\n                <div className='col-md-9'>\r\n                  <input\r\n                    maxLength={255}\r\n                    className='form-control'\r\n                    type='text'\r\n                    placeholder={'Tài khoản'}\r\n                    id='txtUsername'\r\n                    value={dataGroup.username}\r\n                    onChange={(e) => onChange('username', e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='col-md-12 row'>\r\n                <div className='col-md-3'>\r\n                  <h5 className='highlight'>\r\n                    <b>Mật khẩu</b>\r\n                  </h5>\r\n                </div>\r\n                <div className='col-md-9'>\r\n                  <input\r\n                    maxLength={255}\r\n                    className='form-control'\r\n                    type='password'\r\n                    placeholder={'Mật khẩu'}\r\n                    id='txtPassword'\r\n                    value={dataGroup.password}\r\n                    onChange={(e) => onChange('password', e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='col-md-12 row'>\r\n                <div className='col-md-3'>\r\n                  <Checkbox value={remember} onChange={onChangeRemember}>\r\n                    Nhớ đăng nhập\r\n                  </Checkbox>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='col-md-12 row'>\r\n                <div className='pull-right'>\r\n                  <input\r\n                    type='button'\r\n                    onClick={submitGroup}\r\n                    className='btn btn-primary'\r\n                    style={{ marginRight: 15 }}\r\n                    value={'Submit'}\r\n                    id='btnSubmit'\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\DashBoard\\Menu.js",["183"],"/** @format */\r\n\r\nimport React from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { loginState } from '../../recoil/appState';\r\n\r\nfunction Menu(props) {\r\n  const [login, setLogin] = useRecoilState(loginState);\r\n  const userString = sessionStorage.getItem('user') || localStorage.getItem('user');\r\n  const user = userString ? JSON.parse(userString) : '';\r\n  const logout = () => {\r\n    sessionStorage.removeItem('accessToken');\r\n    localStorage.removeItem('accessToken');\r\n    sessionStorage.removeItem('user');\r\n    localStorage.removeItem('user');\r\n    setLogin(false);\r\n  };\r\n  return (\r\n    <header>\r\n      <nav className='navbar navbar-default'>\r\n        <div className='container-fluid' style={{ display: 'flex' }}>\r\n          <div style={{ flexGrow: '3' }}>\r\n            <div className='navbar-header'>\r\n              <NavLink className='navbar-brand' to='/'>\r\n                2T-Education\r\n              </NavLink>\r\n            </div>\r\n            <ul className='nav navbar-nav'>\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to='/'\r\n                  activeStyle={{\r\n                    fontWeight: 'bold',\r\n                    color: 'red',\r\n                  }}\r\n                >\r\n                  Trang chủ\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to='/users'\r\n                  activeStyle={{\r\n                    fontWeight: 'bold',\r\n                    color: 'red',\r\n                  }}\r\n                >\r\n                  Người dùng\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to='/lessons'\r\n                  activeStyle={{\r\n                    fontWeight: 'bold',\r\n                    color: 'red',\r\n                  }}\r\n                >\r\n                  Bài học\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to='/courses'\r\n                  activeStyle={{\r\n                    fontWeight: 'bold',\r\n                    color: 'red',\r\n                  }}\r\n                >\r\n                  Khóa học\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to='/refill-coins'\r\n                  activeStyle={{\r\n                    fontWeight: 'bold',\r\n                    color: 'red',\r\n                  }}\r\n                >\r\n                  Nạp coins\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to='/thong-ke-doanh-so'\r\n                  activeStyle={{\r\n                    fontWeight: 'bold',\r\n                    color: 'red',\r\n                  }}\r\n                >\r\n                  Thống kê doanh số\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div\r\n            className=''\r\n            style={{\r\n              textAlign: 'center',\r\n              flexGrow: '1',\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              padding: '10px',\r\n            }}\r\n          >\r\n            <h5 style={{ fontWeight: 'bold', marginRight: '10px' }}>{user.name}</h5>\r\n            <button className='btn btn-danger' onClick={logout}>\r\n              Đăng xuất\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\utils\\RestfulUtils.js",["184"],"/** @format */\r\n\r\nimport axios from 'axios';\r\n\r\nconst accessToken = () => {\r\n  return sessionStorage.getItem('accessToken') || localStorage.getItem('accessToken');\r\n};\r\n\r\nexport default {\r\n  get: function (url) {\r\n    return new Promise(async (resolve, reject) => {\r\n      await axios\r\n        .get(url, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken()}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          resolve(err.response);\r\n        });\r\n    });\r\n  },\r\n  post: async function (url, body) {\r\n    return new Promise(async (resolve, reject) => {\r\n      await axios\r\n        .post(url, body, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken()}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          resolve(err.response);\r\n        });\r\n    });\r\n  },\r\n\r\n  patch: function (url, body) {\r\n    return new Promise(async (resolve, reject) => {\r\n      await axios\r\n        .patch(url, body, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken()}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          resolve(err.response);\r\n        });\r\n    });\r\n  },\r\n  remove: function (url) {\r\n    return new Promise(async (resolve, reject) => {\r\n      await axios\r\n        .delete(url, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken()}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          resolve(err.response);\r\n        });\r\n    });\r\n  },\r\n};\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Users\\index.js",[],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Lesson\\index.js",[],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Courses\\index.js",[],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Home\\index.js",[],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Users\\Users.js",["185"],"/** @format */\r\n\r\nimport React, { useState } from 'react';\r\nimport UsersTable from './components/UsersTable.js';\r\nimport ModalDetail from './components/ModalDetail';\r\nfunction Users(props) {\r\n  const [DATA, setDATA] = useState({});\r\n  const [titleModal, setTitleModal] = useState('');\r\n  const [isClear, setIsClear] = useState(true);\r\n  const [loadgrid, setLoadgrid] = useState(true);\r\n  const [access, setAccess] = useState('ADD');\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleClose = () => setShowModal(false);\r\n\r\n  const showModalDetail = (access, DATAUPDATE) => {\r\n    let titleModal = '';\r\n    let DATA = '';\r\n\r\n    switch (access) {\r\n      case 'ADD':\r\n        titleModal = 'Thêm';\r\n        break;\r\n      case 'EDIT':\r\n        titleModal = 'Sửa';\r\n        break;\r\n      case 'VIEW':\r\n        titleModal = 'Chi tiết';\r\n        break;\r\n      case 'DELETE':\r\n        titleModal = 'Xóa';\r\n        break;\r\n    }\r\n    if (DATAUPDATE !== undefined) {\r\n      DATA = DATAUPDATE;\r\n    }\r\n\r\n    setShowModal(true);\r\n    setAccess(access);\r\n    setTitleModal(titleModal);\r\n    setDATA(DATA);\r\n    setIsClear(true);\r\n    setLoadgrid(false);\r\n  };\r\n  const change = () => {\r\n    setIsClear(false);\r\n  };\r\n  const load = () => {\r\n    setLoadgrid(true);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        borderColor: 'rgba(123, 102, 102, 0.43)',\r\n        padding: '10px',\r\n      }}\r\n      className='container panel panel-success margintopNewUI'\r\n    >\r\n      <div className='title-content'>Người dùng</div>\r\n      <div className='panel-body' style={{ padding: '10px 0' }}>\r\n        <UsersTable load={load} loadgrid={loadgrid} showModalDetail={showModalDetail} />\r\n      </div>\r\n\r\n      <ModalDetail\r\n        load={load}\r\n        show={showModal}\r\n        access={access}\r\n        DATA={DATA}\r\n        change={change}\r\n        isClear={isClear}\r\n        handleClose={handleClose}\r\n        titleModal={titleModal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n",["186","187"],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Lesson\\Lesson.js",["188"],"/** @format */\r\n\r\nimport React, { useState } from 'react';\r\nimport LessonTable from './components/LessonTable.js';\r\nimport ModalDetail from './components/ModalDetail';\r\nfunction Lesson(props) {\r\n  const [DATA, setDATA] = useState({});\r\n  const [titleModal, setTitleModal] = useState('');\r\n  const [isClear, setIsClear] = useState(true);\r\n  const [loadgrid, setLoadgrid] = useState(true);\r\n  const [access, setAccess] = useState('ADD');\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleClose = () => setShowModal(false);\r\n\r\n  const showModalDetail = (access, DATAUPDATE) => {\r\n    let titleModal = '';\r\n    let DATA = '';\r\n\r\n    switch (access) {\r\n      case 'ADD':\r\n        titleModal = 'Thêm';\r\n        break;\r\n      case 'EDIT':\r\n        titleModal = 'Sửa';\r\n        break;\r\n      case 'VIEW':\r\n        titleModal = 'Chi tiết';\r\n        break;\r\n      case 'DELETE':\r\n        titleModal = 'Xóa';\r\n        break;\r\n    }\r\n    if (DATAUPDATE !== undefined) {\r\n      DATA = DATAUPDATE;\r\n    }\r\n\r\n    setShowModal(true);\r\n    setAccess(access);\r\n    setTitleModal(titleModal);\r\n    setDATA(DATA);\r\n    setIsClear(true);\r\n    setLoadgrid(false);\r\n  };\r\n  const change = () => {\r\n    setIsClear(false);\r\n  };\r\n  const load = () => {\r\n    setLoadgrid(true);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        borderColor: 'rgba(123, 102, 102, 0.43)',\r\n        padding: '10px',\r\n      }}\r\n      className='container panel panel-success margintopNewUI'\r\n    >\r\n      <div className='title-content'>Bài học</div>\r\n      <div className='panel-body' style={{ padding: '10px 0' }}>\r\n        <LessonTable load={load} loadgrid={loadgrid} showModalDetail={showModalDetail} />\r\n      </div>\r\n\r\n      <ModalDetail\r\n        load={load}\r\n        show={showModal}\r\n        access={access}\r\n        DATA={DATA}\r\n        change={change}\r\n        isClear={isClear}\r\n        handleClose={handleClose}\r\n        titleModal={titleModal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lesson;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Courses\\components\\CoursesTable.js",["189","190","191"],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Lesson\\components\\LessonTable.js",["192","193","194"],"/** @format */\r\n\r\nimport { matchSorter } from 'match-sorter';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-6';\r\nimport 'react-table-6/react-table.css';\r\nimport { toast } from 'react-toastify';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nfunction LessonTable(props) {\r\n  const { showModalDetail, loadgrid, load } = props;\r\n  const [data, setData] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const onClickRow = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onDoubleClick: (e, t) => {\r\n        showModalDetail('VIEW', rowInfo.row._original);\r\n      },\r\n      style: {},\r\n    };\r\n  };\r\n  const handleEdit = (row) => {\r\n    return showModalDetail('EDIT', row.row._original);\r\n  };\r\n\r\n  const handleDelete = (row) => {\r\n    return showModalDetail('DELETE', row.row._original);\r\n  };\r\n\r\n  useEffect(() => {\r\n    feedData();\r\n  }, [loadgrid]);\r\n\r\n  const feedData = () => {\r\n    RestfulUtils.get('http://localhost:3030/lessons').then((res) => {\r\n      if (res.status == 200) {\r\n        setData(res.data.data);\r\n        setTotal(res.data.total);\r\n      } else {\r\n        if (res.code === 401) {\r\n          toast.error('Phiên bản hết hạn', { position: 'top-center' });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div\r\n          style={{ padding: 0, marginBottom: '10px' }}\r\n          className='col-md-10 '\r\n        >\r\n          <button\r\n            className='btn btn-primary'\r\n            onClick={() => showModalDetail('ADD')}\r\n            style={{ marginLeft: '15px' }}\r\n          >\r\n            <i class='fas fa-plus' style={{ marginRight: '5px' }}></i>\r\n            Thêm\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ textAlign: 'right' }} className='col-md-2 RightInfo'>\r\n          <h5 className='highlight' style={{ fontWeight: 'bold' }}>\r\n            <i className='fas fa-edit' style={{ textAlign: 'left' }}></i>\r\n            {'Tổng'} {total}\r\n            <span\r\n              style={{ marginLeft: '5px' }}\r\n              className='ReloadButton'\r\n              onClick={feedData}\r\n            >\r\n              <i class='fas fa-sync-alt'></i>\r\n            </span>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='col-md-12' style={{ padding: 0 }}>\r\n        <ReactTable\r\n          style={{\r\n            borderWidth: '1px',\r\n            borderColor: '#aaaaaa',\r\n            borderStyle: 'solid',\r\n          }}\r\n          data={data}\r\n          filterable\r\n          defaultFilterMethod={(filter, row) =>\r\n            String(row[filter.id]) === filter.value\r\n          }\r\n          columns={[\r\n            {\r\n              Header: 'STT',\r\n              id: 'index',\r\n              maxWidth: 50,\r\n              filterable: false,\r\n              Cell: (row) => {\r\n                return (\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <b style={{ marginRight: '10px' }}> {row.index}</b>\r\n                    <span onClick={() => handleEdit(row)} className=''>\r\n                      <i class='far fa-edit'></i>\r\n                    </span>\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Tên bài học\r\n                </div>\r\n              ),\r\n              id: 'title',\r\n              accessor: 'title',\r\n              filterMethod: (filter, rows) =>\r\n                // row[filter.id].startsWith(filter.value) &&\r\n                // row[filter.id].endsWith(filter.value),\r\n                matchSorter(rows, filter.value, { keys: ['title'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  url\r\n                </div>\r\n              ),\r\n              id: 'url',\r\n              accessor: 'url',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['url'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Thứ tự\r\n                </div>\r\n              ),\r\n              width: 100,\r\n              id: 'priority',\r\n              accessor: 'priority',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['priority'] }),\r\n              filterAll: true,\r\n            },\r\n\r\n            {\r\n              Header: 'Status',\r\n              id: 'status',\r\n              width: 200,\r\n              accessor: 'status',\r\n              Cell: ({ value }) => (value ? 'Hoạt động' : 'Khoá'),\r\n              filterMethod: (filter, row) => {\r\n                if (filter.value === 'all') {\r\n                  return true;\r\n                }\r\n                if (filter.value === 'true') {\r\n                  return row[filter.id] === true;\r\n                }\r\n                return row[filter.id] === false;\r\n              },\r\n              Filter: ({ filter, onChange }) => (\r\n                <select\r\n                  onChange={(event) => onChange(event.target.value)}\r\n                  style={{ width: '100%' }}\r\n                  value={filter ? filter.value : 'all'}\r\n                >\r\n                  <option value='all'>Hiển thị tất cả</option>\r\n                  <option value='true'>Hoạt động</option>\r\n                  <option value='false'>Khóa</option>\r\n                </select>\r\n              ),\r\n            },\r\n            {\r\n              Header: 'Xóa',\r\n              id: '_id',\r\n              width: 100,\r\n              Cell: (row) => (\r\n                <div style={{ textAlign: 'center', color: 'red' }}>\r\n                  <span onClick={() => handleDelete(row)} className=''>\r\n                    <i className='far fa-trash-alt'></i>\r\n                  </span>\r\n                </div>\r\n              ),\r\n              filterable: false,\r\n            },\r\n          ]}\r\n          getTheadTrProps={() => {\r\n            return {\r\n              className: 'head',\r\n            };\r\n          }}\r\n          getTrProps={onClickRow}\r\n          defaultPageSize={10}\r\n          noDataText={'Không có dữ liệu'}\r\n          pageText={'Trang'}\r\n          rowsText={'Dòng'}\r\n          previousText={'Lùi'}\r\n          nextText={'Tiến'}\r\n          className='-striped -highlight'\r\n          style={{\r\n            maxHeight: '600px', // This will force the table body to overflow and scroll, since there is not enough room\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LessonTable;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Users\\components\\UsersTable.js",["195","196","197","198"],"import { matchSorter } from 'match-sorter';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-6';\r\nimport 'react-table-6/react-table.css';\r\nimport { toast } from 'react-toastify';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nfunction UsersTable(props) {\r\n  const { showModalDetail, loadgrid, load } = props;\r\n  const [data, setData] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const onClickRow = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onDoubleClick: (e, t) => {\r\n        showModalDetail('VIEW', rowInfo.row._original);\r\n      },\r\n      style: {},\r\n    };\r\n  };\r\n\r\n  const handleEdit = (row) => {\r\n    return showModalDetail('EDIT', row.row._original);\r\n  };\r\n\r\n  const handleDelete = (row) => {\r\n    return showModalDetail('DELETE', row.row._original);\r\n  };\r\n\r\n  useEffect(() => {\r\n    feedData();\r\n  }, [loadgrid]);\r\n\r\n  const feedData = () => {\r\n    RestfulUtils.get('http://localhost:3030/users').then((res) => {\r\n      if (res.status == 200) {\r\n        setData(res.data.data);\r\n        setTotal(res.data.total);\r\n      } else {\r\n        if (res.code === 401) {\r\n          toast.error('Phiên bản hết hạn', { position: 'top-center' });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div\r\n          style={{ padding: 0, marginBottom: '10px' }}\r\n          className='col-md-10 '\r\n        >\r\n          <button\r\n            className='btn btn-primary'\r\n            onClick={() => showModalDetail('ADD')}\r\n            style={{ marginLeft: '15px' }}\r\n          >\r\n            <i class='fas fa-plus' style={{ marginRight: '5px' }}></i>\r\n            Thêm\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ textAlign: 'right' }} className='col-md-2 RightInfo'>\r\n          <h5 className='highlight' style={{ fontWeight: 'bold' }}>\r\n            <i className='fas fa-edit' style={{ textAlign: 'left' }}></i>\r\n            {'Tổng'} {total}\r\n            <span\r\n              style={{ marginLeft: '5px' }}\r\n              className='ReloadButton'\r\n              onClick={feedData}\r\n            >\r\n              <i class='fas fa-sync-alt'></i>\r\n            </span>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='col-md-12' style={{ padding: 0 }}>\r\n        <ReactTable\r\n          style={{\r\n            borderWidth: '1px',\r\n            borderColor: '#aaaaaa',\r\n            borderStyle: 'solid',\r\n          }}\r\n          data={data}\r\n          filterable\r\n          defaultFilterMethod={(filter, row) =>\r\n            String(row[filter.id]) === filter.value\r\n          }\r\n          columns={[\r\n            {\r\n              Header: 'STT',\r\n              id: 'index',\r\n              maxWidth: 50,\r\n              filterable: false,\r\n              Cell: (row) => {\r\n                return (\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <b style={{ marginRight: '10px' }}> {row.index}</b>\r\n                    <span onClick={() => handleEdit(row)} className=''>\r\n                      <i class='far fa-edit'></i>\r\n                    </span>\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Họ và Tên\r\n                </div>\r\n              ),\r\n              accessor: 'name',\r\n              filterMethod: (filter, rows) =>\r\n                // row[filter.id].startsWith(filter.value) &&\r\n                // row[filter.id].endsWith(filter.value),\r\n                matchSorter(rows, filter.value, { keys: ['name'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Email\r\n                </div>\r\n              ),\r\n              id: 'email',\r\n              accessor: 'email',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['email'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  User name\r\n                </div>\r\n              ),\r\n              id: 'username',\r\n              accessor: 'username',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['username'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Coin\r\n                </div>\r\n              ),\r\n              width: 150,\r\n              id: 'coin',\r\n              accessor: 'coin',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['coin'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Quyền hạn\r\n                </div>\r\n              ),\r\n              id: 'role',\r\n              width: 200,\r\n              accessor: 'role',\r\n              Cell: ({ value }) => (value == 1 ? 'Học viên' : 'Biên tập viên'),\r\n              filterMethod: (filter, row) => {\r\n                if (filter.value === 'all') {\r\n                  return true;\r\n                }\r\n                if (filter.value === '1') {\r\n                  return row[filter.id] === 1;\r\n                }\r\n                return row[filter.id] === 2;\r\n              },\r\n              Filter: ({ filter, onChange }) => (\r\n                <select\r\n                  onChange={(event) => onChange(event.target.value)}\r\n                  style={{ width: '100%' }}\r\n                  value={filter ? filter.value : 'all'}\r\n                >\r\n                  <option value='all'>Hiển thị tất cả</option>\r\n                  <option value='1'>Học viên</option>\r\n                  <option value='2'>Biên tập viên</option>\r\n                </select>\r\n              ),\r\n            },\r\n            {\r\n              Header: 'Status',\r\n              id: 'status',\r\n              width: 200,\r\n              accessor: 'status',\r\n              Cell: ({ value }) => (value ? 'Hoạt động' : 'Khoá'),\r\n              filterMethod: (filter, row) => {\r\n                if (filter.value === 'all') {\r\n                  return true;\r\n                }\r\n                if (filter.value === 'true') {\r\n                  return row[filter.id] === true;\r\n                }\r\n                return row[filter.id] === false;\r\n              },\r\n              Filter: ({ filter, onChange }) => (\r\n                <select\r\n                  onChange={(event) => onChange(event.target.value)}\r\n                  style={{ width: '100%' }}\r\n                  value={filter ? filter.value : 'all'}\r\n                >\r\n                  <option value='all'>Hiển thị tất cả</option>\r\n                  <option value='true'>Hoạt động</option>\r\n                  <option value='false'>Khóa</option>\r\n                </select>\r\n              ),\r\n            },\r\n            {\r\n              Header: 'Xóa',\r\n              id: '_id',\r\n              width: 100,\r\n              Cell: (row) => (\r\n                <div style={{ textAlign: 'center', color: 'red' }}>\r\n                  <span onClick={() => handleDelete(row)} className=''>\r\n                    <i className='far fa-trash-alt'></i>\r\n                  </span>\r\n                </div>\r\n              ),\r\n              filterable: false,\r\n            },\r\n          ]}\r\n          getTheadTrProps={() => {\r\n            return {\r\n              className: 'head',\r\n            };\r\n          }}\r\n          getTrProps={onClickRow}\r\n          defaultPageSize={10}\r\n          noDataText={'Không có dữ liệu'}\r\n          pageText={'Trang'}\r\n          rowsText={'Dòng'}\r\n          previousText={'Lùi'}\r\n          nextText={'Tiến'}\r\n          className='-striped -highlight'\r\n          style={{\r\n            maxHeight: '600px', // This will force the table body to overflow and scroll, since there is not enough room\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersTable;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\RefillCoins\\RefillCoins.js",["199"],"import React, { useState } from 'react';\r\nimport RefillCoinsTable from './components/RefillCoinsTable';\r\nimport ModalDetail from './components/ModalDetail';\r\n\r\nfunction RefillCoins(props) {\r\n  const [DATA, setDATA] = useState({});\r\n  const [titleModal, setTitleModal] = useState('');\r\n  const [isClear, setIsClear] = useState(true);\r\n  const [loadgrid, setLoadgrid] = useState(true);\r\n  const [access, setAccess] = useState('ADD');\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleClose = () => setShowModal(false);\r\n\r\n  const showModalDetail = (access, DATAUPDATE) => {\r\n    let titleModal = '';\r\n    let DATA = '';\r\n\r\n    switch (access) {\r\n      case 'ADD':\r\n        titleModal = 'Thêm';\r\n        break;\r\n      case 'EDIT':\r\n        titleModal = 'Sửa';\r\n        break;\r\n      case 'VIEW':\r\n        titleModal = 'Chi tiết';\r\n        break;\r\n      case 'DELETE':\r\n        titleModal = 'Xóa';\r\n        break;\r\n    }\r\n    if (DATAUPDATE !== undefined) {\r\n      DATA = DATAUPDATE;\r\n    }\r\n\r\n    setShowModal(true);\r\n    setAccess(access);\r\n    setTitleModal(titleModal);\r\n    setDATA(DATA);\r\n    setIsClear(true);\r\n    setLoadgrid(false);\r\n  };\r\n  const change = () => {\r\n    setIsClear(false);\r\n  };\r\n  const load = () => {\r\n    setLoadgrid(true);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        borderColor: 'rgba(123, 102, 102, 0.43)',\r\n        padding: '10px',\r\n      }}\r\n      className='container panel panel-success margintopNewUI'\r\n    >\r\n      <div className='title-content'>Nạp coins</div>\r\n      <div className='panel-body' style={{ padding: '10px 0' }}>\r\n        <RefillCoinsTable load={load} loadgrid={loadgrid} showModalDetail={showModalDetail} />\r\n      </div>\r\n\r\n      <ModalDetail\r\n        load={load}\r\n        show={showModal}\r\n        access={access}\r\n        DATA={DATA}\r\n        change={change}\r\n        isClear={isClear}\r\n        handleClose={handleClose}\r\n        titleModal={titleModal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RefillCoins;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\RefillCoins\\components\\ModalDetail.js",["200","201","202","203","204","205","206","207"],"/** @format */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ModalDetail(props) {\r\n  const { show = false, DATA, isClear, change, handleClose, access, titleModal, load } = props;\r\n\r\n  const [dataGroup, setDataGroup] = useState({\r\n    _id: '',\r\n    name: '',\r\n    username: '',\r\n    bankAccount: '',\r\n    bankNameAdmin: '',\r\n    amount: '',\r\n    content: '',\r\n    status: 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newDataGroup = {\r\n      ...dataGroup,\r\n      _id: DATA._id || '',\r\n      name: DATA.name || '',\r\n      username: DATA.username || '',\r\n      bankAccount: DATA.bankAccount || '',\r\n      bankNameAdmin: DATA.bankNameAdmin || '',\r\n      amount: DATA.amount || '',\r\n      content: DATA.content || '',\r\n      status: DATA.status || 1,\r\n    };\r\n\r\n    setDataGroup(newDataGroup);\r\n  }, [DATA, show]);\r\n\r\n  const onChange = (type, e) => {\r\n    const newDataGroup = { ...dataGroup };\r\n    newDataGroup[type] = e.target.value;\r\n    setDataGroup(newDataGroup);\r\n  };\r\n\r\n  const submitGroup = (type) => {\r\n    const data = {\r\n      ...dataGroup,\r\n      coin: dataGroup.coin || 0,\r\n      password: dataGroup.username,\r\n    };\r\n    delete data._id;\r\n\r\n    if (access === 'VIEW') {\r\n      RestfulUtils.patch('http://localhost:3030/refill-coins/' + dataGroup._id, {\r\n        ...data,\r\n        status: type ? 2 : 3,\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      RestfulUtils.remove('http://localhost:3030/refill-coins/' + dataGroup._id)\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const render = () => {\r\n    let xhtml = null;\r\n    if (access === 'DELETE') {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={handleClose}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div className={access == 'VIEW' ? 'col-md-12 disable' : 'col-md-12 '} style={{ paddingTop: '11px' }}>\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-12'>\r\n                      <h5 className=''>\r\n                        <b>{`Bạn có chắc chắn muốn xóa ${dataGroup.name}`}</b>\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input type='button' onClick={submitGroup} className='btn btn-primary' style={{ marginRight: 15 }} value={'Submit'} id='btnSubmit' />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    } else {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={handleClose}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div className={access == 'VIEW' ? 'col-md-12' : 'col-md-12 '} style={{ paddingTop: '11px' }}>\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Họ và tên</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        disabled\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Họ và tên'}\r\n                        id='txtName'\r\n                        value={dataGroup.name}\r\n                        // onChange={(e) => onChange('name', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Tài khoản</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        disabled\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Tài khoản'}\r\n                        id='txtUsername'\r\n                        value={dataGroup.username}\r\n                        // onChange={(e) => onChange('username', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Số tài khoản ngân hàng</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        disabled\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={'Số tài khoản ngân hàng'}\r\n                        id='bankAccount'\r\n                        value={dataGroup.bankAccount}\r\n                        // onChange={(e) => onChange('bankA', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Tên ngân hàng nhận</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        disabled\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Số tài khoản ngân hàng'}\r\n                        id='bankNameAdmin'\r\n                        value={dataGroup.bankNameAdmin}\r\n                        // onChange={(e) => onChange('bankA', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Số tiền</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        disabled\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={'Số tiền'}\r\n                        id='amount'\r\n                        value={dataGroup.amount}\r\n                        // onChange={(e) => onChange('bankA', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Nội dung</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <div style={{ minHeight: '100px' }} className='form-control' disabled>\r\n                        {dataGroup.content}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Trạng thái</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <select className='form-control' value={dataGroup.status} disabled>\r\n                        <option value='1'>Chờ duyệt</option>\r\n                        <option value='2'>Đã duyệt</option>\r\n                        <option value='3'>Đã từ chối</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input\r\n                        type='button'\r\n                        disabled={dataGroup.status == 1 ? false : true}\r\n                        onClick={() => submitGroup(true)}\r\n                        className='btn btn-success'\r\n                        style={{ marginRight: 15 }}\r\n                        value={'Duyệt'}\r\n                        id='btnSubmit'\r\n                      />\r\n                    </div>\r\n                    <div className='pull-right'>\r\n                      <input\r\n                        type='button'\r\n                        disabled={dataGroup.status == 1 ? false : true}\r\n                        onClick={() => submitGroup(false)}\r\n                        className='btn btn-warning'\r\n                        style={{ marginRight: 15 }}\r\n                        value={'Từ chối'}\r\n                        id='btnSubmit'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    }\r\n    return xhtml;\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <ToastContainer\r\n        position='bottom-right'\r\n        autoClose={2000}\r\n        closeOnClick\r\n        pauseOnHover\r\n      /> */}\r\n      {render()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDetail;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\RefillCoins\\components\\RefillCoinsTable.js",["208","209","210","211","212","213","214","215"],"import { matchSorter } from 'match-sorter';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-6';\r\nimport 'react-table-6/react-table.css';\r\nimport { toast } from 'react-toastify';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nfunction RefillCoinsTable(props) {\r\n  const { showModalDetail, loadgrid, load } = props;\r\n  const [data, setData] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const onClickRow = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onDoubleClick: (e, t) => {\r\n        showModalDetail('VIEW', rowInfo.row._original);\r\n      },\r\n      style: {},\r\n    };\r\n  };\r\n\r\n  const handleEdit = (row) => {\r\n    return showModalDetail('EDIT', row.row._original);\r\n  };\r\n\r\n  const handleDelete = (row) => {\r\n    return showModalDetail('DELETE', row.row._original);\r\n  };\r\n\r\n  useEffect(() => {\r\n    feedData();\r\n  }, [loadgrid]);\r\n\r\n  const feedData = () => {\r\n    RestfulUtils.get('http://localhost:3030/refill-coins?[$populate]=userId').then((res) => {\r\n      if (res.status == 200) {\r\n        setData(res.data.data);\r\n        setTotal(res.data.total);\r\n      } else {\r\n        if (res.code === 401) {\r\n          toast.error('Phiên bản hết hạn', { position: 'top-center' });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div style={{ padding: 0, marginBottom: '10px' }} className='col-md-10 '>\r\n          {/* <button className='btn btn-primary' onClick={() => showModalDetail('ADD')} style={{ marginLeft: '15px' }}>\r\n            <i class='fas fa-plus' style={{ marginRight: '5px' }}></i>\r\n            Thêm\r\n          </button> */}\r\n        </div>\r\n\r\n        <div style={{ textAlign: 'right' }} className='col-md-2 RightInfo'>\r\n          <h5 className='highlight' style={{ fontWeight: 'bold' }}>\r\n            <i className='fas fa-edit' style={{ textAlign: 'left' }}></i>\r\n            {' Tổng'} {total}\r\n            <span style={{ marginLeft: '5px' }} className='ReloadButton' onClick={feedData}>\r\n              <i class='fas fa-sync-alt'></i>\r\n            </span>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='col-md-12' style={{ padding: 0 }}>\r\n        <ReactTable\r\n          style={{\r\n            borderWidth: '1px',\r\n            borderColor: '#aaaaaa',\r\n            borderStyle: 'solid',\r\n          }}\r\n          data={data}\r\n          filterable\r\n          defaultFilterMethod={(filter, row) => String(row[filter.id]) === filter.value}\r\n          columns={[\r\n            {\r\n              Header: 'STT',\r\n              id: 'index',\r\n              maxWidth: 50,\r\n              filterable: false,\r\n              Cell: (row) => {\r\n                return (\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <b style={{ marginRight: '10px' }}> {row.index}</b>\r\n                    {/* <span onClick={() => handleEdit(row)} className=''>\r\n                      <i class='far fa-edit'></i>\r\n                    </span> */}\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Họ và Tên\r\n                </div>\r\n              ),\r\n              accessor: 'name',\r\n              filterMethod: (filter, rows) =>\r\n                // row[filter.id].startsWith(filter.value) &&\r\n                // row[filter.id].endsWith(filter.value),\r\n                matchSorter(rows, filter.value, { keys: ['name'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblUsername'>\r\n                  Tài khoản\r\n                </div>\r\n              ),\r\n              id: 'username',\r\n              accessor: 'username',\r\n              filterMethod: (filter, rows) => matchSorter(rows, filter.value, { keys: ['username'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblBankAccount'>\r\n                  Số tài khoản\r\n                </div>\r\n              ),\r\n              width: 200,\r\n              id: 'bankAccount',\r\n              accessor: 'bankAccount',\r\n              filterMethod: (filter, rows) => matchSorter(rows, filter.value, { keys: ['coin'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='bankNameAdmin'>\r\n                  Ngân hàng được nhận\r\n                </div>\r\n              ),\r\n              id: 'bankNameAdmin',\r\n              width: 200,\r\n              accessor: 'bankNameAdmin',\r\n              filterMethod: (filter, rows) => matchSorter(rows, filter.value, { keys: ['bankNameAdmin'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='amount'>\r\n                  Số tiền\r\n                </div>\r\n              ),\r\n              id: 'amount',\r\n              width: 200,\r\n              accessor: 'amount',\r\n              filterMethod: (filter, rows) => matchSorter(rows, filter.value, { keys: ['amount'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='content'>\r\n                  Nội dung\r\n                </div>\r\n              ),\r\n              id: 'content',\r\n              width: 400,\r\n              accessor: 'content',\r\n              filterMethod: (filter, rows) => matchSorter(rows, filter.value, { keys: ['content'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: 'Status',\r\n              id: 'status',\r\n              width: 200,\r\n              accessor: 'status',\r\n              Cell: ({ value }) => {\r\n                let status = 'Chờ duyệt';\r\n\r\n                if (value == 2) {\r\n                  status = 'Đã duyệt';\r\n                }\r\n\r\n                if (value == 3) {\r\n                  status = 'Đã từ chối';\r\n                }\r\n\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      color: (() => {\r\n                        if (value == 1) {\r\n                          return '#ec971f';\r\n                        }\r\n                        if (value == 2) {\r\n                          return '#4cae4c';\r\n                        } else {\r\n                          return 'red';\r\n                        }\r\n                      })(),\r\n                    }}\r\n                  >\r\n                    {status}\r\n                  </div>\r\n                );\r\n              },\r\n              filterMethod: (filter, row) => {\r\n                if (filter.value === 'all') {\r\n                  return true;\r\n                }\r\n                if (filter.value === '1') {\r\n                  return row[filter.id] === 1;\r\n                }\r\n                if (filter.value === '2') {\r\n                  return row[filter.id] === 2;\r\n                }\r\n                return row[filter.id] === 3;\r\n              },\r\n              Filter: ({ filter, onChange }) => (\r\n                <select onChange={(event) => onChange(event.target.value)} style={{ width: '100%' }} value={filter ? filter.value : 'all'}>\r\n                  <option value='all'>Hiển thị tất cả</option>\r\n                  <option value='1'>Chờ duyệt</option>\r\n                  <option value='2'>Đã duyệt</option>\r\n                  <option value='3'>Đã từ chối</option>\r\n                </select>\r\n              ),\r\n            },\r\n            {\r\n              Header: 'Xóa',\r\n              id: '_id',\r\n              width: 100,\r\n              Cell: (row) => (\r\n                <div style={{ textAlign: 'center', color: 'red' }}>\r\n                  <span onClick={() => handleDelete(row)} className=''>\r\n                    <i className='far fa-trash-alt'></i>\r\n                  </span>\r\n                </div>\r\n              ),\r\n              filterable: false,\r\n            },\r\n          ]}\r\n          getTheadTrProps={() => {\r\n            return {\r\n              className: 'head',\r\n            };\r\n          }}\r\n          getTrProps={onClickRow}\r\n          defaultPageSize={10}\r\n          noDataText={'Không có dữ liệu'}\r\n          pageText={'Trang'}\r\n          rowsText={'Dòng'}\r\n          previousText={'Lùi'}\r\n          nextText={'Tiến'}\r\n          className='-striped -highlight'\r\n          style={{\r\n            maxHeight: '600px', // This will force the table body to overflow and scroll, since there is not enough room\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RefillCoinsTable;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Users\\components\\ModalDetail.js",["216","217","218","219","220","221","222","223"],"/** @format */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ModalDetail(props) {\r\n  const { show = false, DATA, isClear, change, handleClose, access, titleModal, load } = props;\r\n\r\n  const [dataGroup, setDataGroup] = useState({\r\n    _id: '',\r\n    name: '',\r\n    username: '',\r\n    coin: '',\r\n    role: 1,\r\n    status: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newDataGroup = {\r\n      ...dataGroup,\r\n      _id: DATA._id || '',\r\n      name: DATA.name || '',\r\n      username: DATA.username || '',\r\n      coin: DATA.coin || '',\r\n      role: DATA.role || 1,\r\n      status: DATA.status || false,\r\n    };\r\n\r\n    setDataGroup(newDataGroup);\r\n  }, [DATA, show]);\r\n\r\n  const onChange = (type, e) => {\r\n    const newDataGroup = { ...dataGroup };\r\n    newDataGroup[type] = e.target.value;\r\n    setDataGroup(newDataGroup);\r\n  };\r\n\r\n  const submitGroup = () => {\r\n    const data = {\r\n      ...dataGroup,\r\n      coin: dataGroup.coin || 0,\r\n      password: dataGroup.username,\r\n    };\r\n    delete data._id;\r\n    if (access === 'EDIT') {\r\n      delete data.username;\r\n      delete data.password;\r\n    }\r\n\r\n    if (access === 'ADD') {\r\n      RestfulUtils.post('http://localhost:3030/users', { ...data })\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (access === 'EDIT') {\r\n      console.log(data);\r\n      RestfulUtils.patch('http://localhost:3030/users/' + dataGroup._id, {\r\n        ...data,\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      RestfulUtils.remove('http://localhost:3030/users/' + dataGroup._id)\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const render = () => {\r\n    let xhtml = null;\r\n    if (access === 'DELETE') {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={handleClose}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div className={access == 'VIEW' ? 'col-md-12 disable' : 'col-md-12 '} style={{ paddingTop: '11px' }}>\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-12'>\r\n                      <h5 className='highlight'>\r\n                        <b>{`Bạn có chắc chắn muốn xóa ${dataGroup.name}`}</b>\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input type='button' onClick={submitGroup} className='btn btn-primary' style={{ marginRight: 15 }} value={'Submit'} id='btnSubmit' />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    } else {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={handleClose}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div className={access == 'VIEW' ? 'col-md-12 disable' : 'col-md-12 '} style={{ paddingTop: '11px' }}>\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Họ và tên</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Họ và tên'}\r\n                        id='txtName'\r\n                        value={dataGroup.name}\r\n                        onChange={(e) => onChange('name', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Tài khoản</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        disabled={access == 'ADD' ? false : true}\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Tài khoản'}\r\n                        id='txtUsername'\r\n                        value={dataGroup.username}\r\n                        onChange={(e) => onChange('username', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Coin</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={'Coin'}\r\n                        id='txtCoin'\r\n                        value={dataGroup.coin}\r\n                        onChange={(e) => onChange('coin', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Quyền hạn</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <select className='form-control' onChange={(e) => onChange('role', e)}>\r\n                        <option selected={dataGroup.role == 1 ? true : false} value='1'>\r\n                          Học viên\r\n                        </option>\r\n                        <option selected={dataGroup.role == 2 ? true : false} value='2'>\r\n                          Biên tập viên\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Trạng thái</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <select className='form-control' onChange={(e) => onChange('status', e)}>\r\n                        <option selected={dataGroup.status ? true : false} value='true'>\r\n                          Hoạt động\r\n                        </option>\r\n                        <option selected={!dataGroup.status ? true : false} value='false'>\r\n                          Khóa\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input type='button' onClick={submitGroup} className='btn btn-primary' style={{ marginRight: 15 }} value={'Submit'} id='btnSubmit' />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    }\r\n    return xhtml;\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <ToastContainer\r\n        position='bottom-right'\r\n        autoClose={2000}\r\n        closeOnClick\r\n        pauseOnHover\r\n      /> */}\r\n      {render()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDetail;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\Courses\\Courses.js",["224"],"/** @format */\r\n\r\nimport React, { useState } from 'react';\r\nimport CoursesTable from './components/CoursesTable.js';\r\nimport ModalDetail from './components/ModalDetail';\r\nfunction Users(props) {\r\n  const [DATA, setDATA] = useState({});\r\n  const [titleModal, setTitleModal] = useState('');\r\n  const [isClear, setIsClear] = useState(true);\r\n  const [loadgrid, setLoadgrid] = useState(true);\r\n  const [access, setAccess] = useState('ADD');\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleClose = () => setShowModal(false);\r\n\r\n  const showModalDetail = (access, DATAUPDATE) => {\r\n    let titleModal = '';\r\n    let DATA = '';\r\n\r\n    switch (access) {\r\n      case 'ADD':\r\n        titleModal = 'Thêm';\r\n        break;\r\n      case 'EDIT':\r\n        titleModal = 'Sửa';\r\n        break;\r\n      case 'VIEW':\r\n        titleModal = 'Chi tiết';\r\n        break;\r\n      case 'DELETE':\r\n        titleModal = 'Xóa';\r\n        break;\r\n    }\r\n    if (DATAUPDATE !== undefined) {\r\n      DATA = DATAUPDATE;\r\n    }\r\n\r\n    setShowModal(true);\r\n    setAccess(access);\r\n    setTitleModal(titleModal);\r\n    setDATA(DATA);\r\n    setIsClear(true);\r\n    setLoadgrid(false);\r\n  };\r\n  const change = () => {\r\n    setIsClear(false);\r\n  };\r\n  const load = () => {\r\n    setLoadgrid(true);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        borderColor: 'rgba(123, 102, 102, 0.43)',\r\n        padding: '10px',\r\n      }}\r\n      className='container panel panel-success margintopNewUI'\r\n    >\r\n      <div className='title-content'>Khoá học</div>\r\n      <div className='panel-body' style={{ padding: '10px 0' }}>\r\n        <CoursesTable load={load} loadgrid={loadgrid} showModalDetail={showModalDetail} />\r\n      </div>\r\n\r\n      <ModalDetail\r\n        load={load}\r\n        show={showModal}\r\n        access={access}\r\n        DATA={DATA}\r\n        change={change}\r\n        isClear={isClear}\r\n        handleClose={handleClose}\r\n        titleModal={titleModal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\RefillCoins\\index.js",[],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\ThongKeDoanhSo\\ThongKeDoanhSo.js",["225"],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\reportWebVitals.js",[],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\ThongKeDoanhSo\\components\\Chart.js",["226","227"],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\ThongKeDoanhSo\\components\\canvasjs.react.js",["228"],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\ThongKeDoanhSo\\components\\canvasjs.min.js",[],"C:\\HocHanh\\hoc-online-reactjs-cms\\src\\features\\ThongKeDoanhSo\\components\\Char2.js",[],{"ruleId":"229","severity":1,"message":"230","line":7,"column":21,"nodeType":"231","messageId":"232","endLine":7,"endColumn":29},{"ruleId":"233","severity":1,"message":"234","line":29,"column":6,"nodeType":"235","endLine":29,"endColumn":13,"suggestions":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":13,"column":24,"nodeType":"243","messageId":"244","endLine":13,"endColumn":26},{"ruleId":"237","replacedBy":"245"},{"ruleId":"239","replacedBy":"246"},{"ruleId":"229","severity":1,"message":"247","line":9,"column":31,"nodeType":"231","messageId":"232","endLine":9,"endColumn":38},{"ruleId":"229","severity":1,"message":"248","line":9,"column":40,"nodeType":"231","messageId":"232","endLine":9,"endColumn":46},{"ruleId":"233","severity":1,"message":"249","line":30,"column":6,"nodeType":"235","endLine":30,"endColumn":18,"suggestions":"250"},{"ruleId":"241","severity":1,"message":"242","line":111,"column":40,"nodeType":"243","messageId":"244","endLine":111,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":148,"column":40,"nodeType":"243","messageId":"244","endLine":148,"endColumn":42},{"ruleId":"229","severity":1,"message":"247","line":10,"column":31,"nodeType":"231","messageId":"232","endLine":10,"endColumn":38},{"ruleId":"229","severity":1,"message":"248","line":10,"column":40,"nodeType":"231","messageId":"232","endLine":10,"endColumn":46},{"ruleId":"233","severity":1,"message":"249","line":51,"column":6,"nodeType":"235","endLine":51,"endColumn":18,"suggestions":"251"},{"ruleId":"241","severity":1,"message":"242","line":193,"column":40,"nodeType":"243","messageId":"244","endLine":193,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":230,"column":40,"nodeType":"243","messageId":"244","endLine":230,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":297,"column":31,"nodeType":"243","messageId":"244","endLine":297,"endColumn":33},{"ruleId":"241","severity":1,"message":"242","line":315,"column":75,"nodeType":"243","messageId":"244","endLine":315,"endColumn":77},{"ruleId":"241","severity":1,"message":"242","line":318,"column":37,"nodeType":"243","messageId":"244","endLine":318,"endColumn":39},{"ruleId":"241","severity":1,"message":"242","line":327,"column":46,"nodeType":"243","messageId":"244","endLine":327,"endColumn":48},{"ruleId":"241","severity":1,"message":"242","line":334,"column":75,"nodeType":"243","messageId":"244","endLine":334,"endColumn":77},{"ruleId":"241","severity":1,"message":"242","line":353,"column":75,"nodeType":"243","messageId":"244","endLine":353,"endColumn":77},{"ruleId":"241","severity":1,"message":"242","line":356,"column":36,"nodeType":"243","messageId":"244","endLine":356,"endColumn":38},{"ruleId":"241","severity":1,"message":"242","line":365,"column":46,"nodeType":"243","messageId":"244","endLine":365,"endColumn":48},{"ruleId":"241","severity":1,"message":"242","line":372,"column":75,"nodeType":"243","messageId":"244","endLine":372,"endColumn":77},{"ruleId":"229","severity":1,"message":"252","line":4,"column":27,"nodeType":"231","messageId":"232","endLine":4,"endColumn":33},{"ruleId":"229","severity":1,"message":"253","line":4,"column":50,"nodeType":"231","messageId":"232","endLine":4,"endColumn":54},{"ruleId":"229","severity":1,"message":"254","line":10,"column":10,"nodeType":"231","messageId":"232","endLine":10,"endColumn":15},{"ruleId":"233","severity":1,"message":"249","line":16,"column":6,"nodeType":"235","endLine":16,"endColumn":8,"suggestions":"255"},{"ruleId":"229","severity":1,"message":"254","line":9,"column":10,"nodeType":"231","messageId":"232","endLine":9,"endColumn":15},{"ruleId":"256","severity":1,"message":"257","line":9,"column":1,"nodeType":"258","endLine":75,"endColumn":3},{"ruleId":"259","severity":1,"message":"260","line":20,"column":5,"nodeType":"261","messageId":"262","endLine":33,"endColumn":6},{"ruleId":"237","replacedBy":"263"},{"ruleId":"239","replacedBy":"264"},{"ruleId":"259","severity":1,"message":"260","line":20,"column":5,"nodeType":"261","messageId":"262","endLine":33,"endColumn":6},{"ruleId":"229","severity":1,"message":"265","line":10,"column":38,"nodeType":"231","messageId":"232","endLine":10,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":37,"column":22,"nodeType":"243","messageId":"244","endLine":37,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":223,"column":11,"nodeType":"268","endLine":225,"endColumn":13},{"ruleId":"229","severity":1,"message":"265","line":10,"column":38,"nodeType":"231","messageId":"232","endLine":10,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":35,"column":22,"nodeType":"243","messageId":"244","endLine":35,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":200,"column":11,"nodeType":"268","endLine":202,"endColumn":13},{"ruleId":"229","severity":1,"message":"265","line":8,"column":38,"nodeType":"231","messageId":"232","endLine":8,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":35,"column":22,"nodeType":"243","messageId":"244","endLine":35,"endColumn":24},{"ruleId":"241","severity":1,"message":"242","line":165,"column":43,"nodeType":"243","messageId":"244","endLine":165,"endColumn":45},{"ruleId":"266","severity":1,"message":"267","line":241,"column":11,"nodeType":"268","endLine":243,"endColumn":13},{"ruleId":"259","severity":1,"message":"260","line":19,"column":5,"nodeType":"261","messageId":"262","endLine":32,"endColumn":6},{"ruleId":"229","severity":1,"message":"247","line":9,"column":31,"nodeType":"231","messageId":"232","endLine":9,"endColumn":38},{"ruleId":"229","severity":1,"message":"248","line":9,"column":40,"nodeType":"231","messageId":"232","endLine":9,"endColumn":46},{"ruleId":"233","severity":1,"message":"249","line":36,"column":6,"nodeType":"235","endLine":36,"endColumn":18,"suggestions":"269"},{"ruleId":"229","severity":1,"message":"270","line":38,"column":9,"nodeType":"231","messageId":"232","endLine":38,"endColumn":17},{"ruleId":"241","severity":1,"message":"242","line":105,"column":40,"nodeType":"243","messageId":"244","endLine":105,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":142,"column":40,"nodeType":"243","messageId":"244","endLine":142,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":275,"column":52,"nodeType":"243","messageId":"244","endLine":275,"endColumn":54},{"ruleId":"241","severity":1,"message":"242","line":286,"column":52,"nodeType":"243","messageId":"244","endLine":286,"endColumn":54},{"ruleId":"229","severity":1,"message":"265","line":8,"column":38,"nodeType":"231","messageId":"232","endLine":8,"endColumn":42},{"ruleId":"229","severity":1,"message":"271","line":21,"column":9,"nodeType":"231","messageId":"232","endLine":21,"endColumn":19},{"ruleId":"241","severity":1,"message":"242","line":35,"column":22,"nodeType":"243","messageId":"244","endLine":35,"endColumn":24},{"ruleId":"241","severity":1,"message":"242","line":173,"column":27,"nodeType":"243","messageId":"244","endLine":173,"endColumn":29},{"ruleId":"241","severity":1,"message":"242","line":177,"column":27,"nodeType":"243","messageId":"244","endLine":177,"endColumn":29},{"ruleId":"241","severity":1,"message":"242","line":185,"column":35,"nodeType":"243","messageId":"244","endLine":185,"endColumn":37},{"ruleId":"241","severity":1,"message":"242","line":188,"column":35,"nodeType":"243","messageId":"244","endLine":188,"endColumn":37},{"ruleId":"266","severity":1,"message":"267","line":248,"column":11,"nodeType":"268","endLine":250,"endColumn":13},{"ruleId":"229","severity":1,"message":"247","line":9,"column":31,"nodeType":"231","messageId":"232","endLine":9,"endColumn":38},{"ruleId":"229","severity":1,"message":"248","line":9,"column":40,"nodeType":"231","messageId":"232","endLine":9,"endColumn":46},{"ruleId":"233","severity":1,"message":"249","line":32,"column":6,"nodeType":"235","endLine":32,"endColumn":18,"suggestions":"272"},{"ruleId":"241","severity":1,"message":"242","line":119,"column":40,"nodeType":"243","messageId":"244","endLine":119,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":156,"column":40,"nodeType":"243","messageId":"244","endLine":156,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":184,"column":42,"nodeType":"243","messageId":"244","endLine":184,"endColumn":44},{"ruleId":"241","severity":1,"message":"242","line":223,"column":58,"nodeType":"243","messageId":"244","endLine":223,"endColumn":60},{"ruleId":"241","severity":1,"message":"242","line":226,"column":58,"nodeType":"243","messageId":"244","endLine":226,"endColumn":60},{"ruleId":"259","severity":1,"message":"260","line":20,"column":5,"nodeType":"261","messageId":"262","endLine":33,"endColumn":6},{"ruleId":"241","severity":1,"message":"242","line":32,"column":31,"nodeType":"243","messageId":"244","endLine":32,"endColumn":33},{"ruleId":"229","severity":1,"message":"273","line":3,"column":5,"nodeType":"231","messageId":"232","endLine":3,"endColumn":13},{"ruleId":"274","severity":1,"message":"275","line":19,"column":5,"nodeType":"276","messageId":"244","endLine":19,"endColumn":10},{"ruleId":"277","severity":1,"message":"278","line":1,"column":1,"nodeType":"279","messageId":"244","fix":"280"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLogin'. Either include it or remove the dependency array.","ArrayExpression",["281"],"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["282"],["283"],"'isClear' is assigned a value but never used.","'change' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dataGroup'. Either include it or remove the dependency array.",["284"],["285"],"'Router' is defined but never used.","'Link' is defined but never used.","'login' is assigned a value but never used.",["286"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["282"],["283"],"'load' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["287"],"'onChange' is assigned a value but never used.","'handleEdit' is assigned a value but never used.",["288"],"'CanvasJS' is assigned a value but never used.","no-dupe-keys","Duplicate key 'axisY'.","ObjectExpression","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"289","text":"290"},{"desc":"291","fix":"292"},"no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"293","fix":"295"},{"desc":"296","fix":"297"},{"desc":"293","fix":"298"},{"desc":"293","fix":"299"},[-1,0],"","Update the dependencies array to be: [login, setLogin]",{"range":"300","text":"301"},"Update the dependencies array to be: [DATA, dataGroup, show]",{"range":"302","text":"303"},{"range":"304","text":"303"},"Update the dependencies array to be: [dataGroup]",{"range":"305","text":"306"},{"range":"307","text":"303"},{"range":"308","text":"303"},[777,784],"[login, setLogin]",[763,775],"[DATA, dataGroup, show]",[1460,1472],[650,652],"[dataGroup]",[954,966],[806,818]]