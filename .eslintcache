[{"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\reportWebVitals.js":"1","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\DashBoard\\index.js":"2","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\DashBoard\\DashBoard.js":"3","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Users\\components\\UsersTable.js":"4","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Users\\components\\ModalDetail.js":"5","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Users\\Users.js":"6","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\utils\\RestfulUtils.js":"7","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\App.js":"8","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Login\\Login.js":"9","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\index.js":"10","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Users\\index.js":"11","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Login\\index.js":"12","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Lesson\\components\\ModalDetail.js":"13","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Lesson\\Lesson.js":"14","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Lesson\\components\\LessonTable.js":"15","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Courses\\components\\ModalDetail.js":"16","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Courses\\components\\CoursesTable.js":"17","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Lesson\\index.js":"18","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Courses\\Courses.js":"19","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\DashBoard\\Menu.js":"20","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\recoil\\appState.js":"21","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Courses\\index.js":"22"},{"size":362,"mtime":1606555666109,"results":"23","hashOfConfig":"24"},{"size":85,"mtime":1606665588981,"results":"25","hashOfConfig":"24"},{"size":667,"mtime":1607270274030,"results":"26","hashOfConfig":"24"},{"size":8241,"mtime":1607004749939,"results":"27","hashOfConfig":"24"},{"size":10651,"mtime":1607091240898,"results":"28","hashOfConfig":"24"},{"size":2002,"mtime":1607091840240,"results":"29","hashOfConfig":"24"},{"size":1761,"mtime":1607265259721,"results":"30","hashOfConfig":"24"},{"size":1399,"mtime":1607262894386,"results":"31","hashOfConfig":"24"},{"size":4500,"mtime":1607263151145,"results":"32","hashOfConfig":"24"},{"size":591,"mtime":1607258770451,"results":"33","hashOfConfig":"24"},{"size":73,"mtime":1606665577980,"results":"34","hashOfConfig":"24"},{"size":73,"mtime":1606662265435,"results":"35","hashOfConfig":"24"},{"size":9372,"mtime":1607091222486,"results":"36","hashOfConfig":"24"},{"size":2001,"mtime":1607002458151,"results":"37","hashOfConfig":"24"},{"size":6687,"mtime":1607002669795,"results":"38","hashOfConfig":"24"},{"size":16606,"mtime":1607270368061,"results":"39","hashOfConfig":"24"},{"size":6601,"mtime":1607091840248,"results":"40","hashOfConfig":"24"},{"size":76,"mtime":1607002071782,"results":"41","hashOfConfig":"24"},{"size":2008,"mtime":1607004097249,"results":"42","hashOfConfig":"24"},{"size":2943,"mtime":1607265246639,"results":"43","hashOfConfig":"24"},{"size":127,"mtime":1607262019311,"results":"44","hashOfConfig":"24"},{"size":79,"mtime":1607004053013,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"19p7r0x",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\reportWebVitals.js",[],["104","105"],"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\DashBoard\\index.js",[],["106","107"],"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\DashBoard\\DashBoard.js",["108","109"],"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Users\\components\\UsersTable.js",["110","111","112","113"],"/** @format */\r\n\r\nimport { matchSorter } from 'match-sorter';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-6';\r\nimport 'react-table-6/react-table.css';\r\nimport { toast } from 'react-toastify';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nfunction UsersTable(props) {\r\n  const { showModalDetail, loadgrid, load } = props;\r\n  const [data, setData] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const onClickRow = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onDoubleClick: (e, t) => {\r\n        showModalDetail('VIEW', rowInfo.row._original);\r\n      },\r\n      style: {},\r\n    };\r\n  };\r\n  const handleEdit = (row) => {\r\n    return showModalDetail('EDIT', row.row._original);\r\n  };\r\n\r\n  const handleDelete = (row) => {\r\n    return showModalDetail('DELETE', row.row._original);\r\n  };\r\n\r\n  useEffect(() => {\r\n    feedData();\r\n  }, [loadgrid]);\r\n\r\n  const feedData = () => {\r\n    RestfulUtils.get('http://localhost:3030/users').then((res) => {\r\n      if (res.status == 200) {\r\n        setData(res.data.data);\r\n        setTotal(res.data.total);\r\n      } else {\r\n        if (res.code === 401) {\r\n          toast.error('Phiên bản hết hạn', { position: 'top-center' });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div\r\n          style={{ padding: 0, marginBottom: '10px' }}\r\n          className='col-md-10 '\r\n        >\r\n          <button\r\n            className='btn btn-primary'\r\n            onClick={() => showModalDetail('ADD')}\r\n            style={{ marginLeft: '15px' }}\r\n          >\r\n            <i class='fas fa-plus' style={{ marginRight: '5px' }}></i>\r\n            Thêm\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ textAlign: 'right' }} className='col-md-2 RightInfo'>\r\n          <h5 className='highlight' style={{ fontWeight: 'bold' }}>\r\n            <i className='fas fa-edit' style={{ textAlign: 'left' }}></i>\r\n            {'Tổng'} {total}\r\n            <span\r\n              style={{ marginLeft: '5px' }}\r\n              className='ReloadButton'\r\n              onClick={() => console.log('asdf')}\r\n            >\r\n              <i class='fas fa-sync-alt'></i>\r\n            </span>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='col-md-12' style={{ padding: 0 }}>\r\n        <ReactTable\r\n          style={{\r\n            borderWidth: '1px',\r\n            borderColor: '#aaaaaa',\r\n            borderStyle: 'solid',\r\n          }}\r\n          data={data}\r\n          filterable\r\n          defaultFilterMethod={(filter, row) =>\r\n            String(row[filter.id]) === filter.value\r\n          }\r\n          columns={[\r\n            {\r\n              Header: 'STT',\r\n              id: 'index',\r\n              maxWidth: 50,\r\n              filterable: false,\r\n              Cell: (row) => {\r\n                return (\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <b style={{ marginRight: '10px' }}> {row.index}</b>\r\n                    <span onClick={() => handleEdit(row)} className=''>\r\n                      <i class='far fa-edit'></i>\r\n                    </span>\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Họ và Tên\r\n                </div>\r\n              ),\r\n              accessor: 'name',\r\n              filterMethod: (filter, rows) =>\r\n                // row[filter.id].startsWith(filter.value) &&\r\n                // row[filter.id].endsWith(filter.value),\r\n                matchSorter(rows, filter.value, { keys: ['name'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Email\r\n                </div>\r\n              ),\r\n              id: 'email',\r\n              accessor: 'email',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['email'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  User name\r\n                </div>\r\n              ),\r\n              id: 'username',\r\n              accessor: 'username',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['username'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Coin\r\n                </div>\r\n              ),\r\n              width: 100,\r\n              id: 'coin',\r\n              accessor: 'coin',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['coin'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Quyền hạn\r\n                </div>\r\n              ),\r\n              id: 'role',\r\n              accessor: 'role',\r\n              Cell: ({ value }) => (value == 1 ? 'Học viên' : 'Biên tập viên'),\r\n              filterMethod: (filter, row) => {\r\n                if (filter.value === 'all') {\r\n                  return true;\r\n                }\r\n                if (filter.value === '1') {\r\n                  return row[filter.id] === 1;\r\n                }\r\n                return row[filter.id] === 2;\r\n              },\r\n              Filter: ({ filter, onChange }) => (\r\n                <select\r\n                  onChange={(event) => onChange(event.target.value)}\r\n                  style={{ width: '100%' }}\r\n                  value={filter ? filter.value : 'all'}\r\n                >\r\n                  <option value='all'>Hiển thị tất cả</option>\r\n                  <option value='1'>Học viên</option>\r\n                  <option value='2'>Biên tập viên</option>\r\n                </select>\r\n              ),\r\n            },\r\n            {\r\n              Header: 'Status',\r\n              id: 'status',\r\n              accessor: 'status',\r\n              Cell: ({ value }) => (value ? 'Active' : 'Blook'),\r\n              filterMethod: (filter, row) => {\r\n                if (filter.value === 'all') {\r\n                  return true;\r\n                }\r\n                if (filter.value === 'true') {\r\n                  return row[filter.id] === true;\r\n                }\r\n                return row[filter.id] === false;\r\n              },\r\n              Filter: ({ filter, onChange }) => (\r\n                <select\r\n                  onChange={(event) => onChange(event.target.value)}\r\n                  style={{ width: '100%' }}\r\n                  value={filter ? filter.value : 'all'}\r\n                >\r\n                  <option value='all'>Hiển thị tất cả</option>\r\n                  <option value='true'>Hoạt động</option>\r\n                  <option value='false'>Khóa</option>\r\n                </select>\r\n              ),\r\n            },\r\n            {\r\n              Header: 'Xóa',\r\n              id: '_id',\r\n\r\n              Cell: (row) => (\r\n                <div style={{ textAlign: 'center', color: 'red' }}>\r\n                  <span onClick={() => handleDelete(row)} className=''>\r\n                    <i className='far fa-trash-alt'></i>\r\n                  </span>\r\n                </div>\r\n              ),\r\n              filterable: false,\r\n            },\r\n          ]}\r\n          getTheadTrProps={() => {\r\n            return {\r\n              className: 'head',\r\n            };\r\n          }}\r\n          getTrProps={onClickRow}\r\n          defaultPageSize={10}\r\n          noDataText={'Không có dữ liệu'}\r\n          pageText={'Trang'}\r\n          rowsText={'Dòng'}\r\n          previousText={'Lùi'}\r\n          nextText={'Tiến'}\r\n          className='-striped -highlight'\r\n          style={{\r\n            maxHeight: '600px', // This will force the table body to overflow and scroll, since there is not enough room\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersTable;\r\n","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Users\\components\\ModalDetail.js",["114","115","116","117","118","119","120","121","122"],"/** @format */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ModalDetail(props) {\r\n  const {\r\n    show = false,\r\n    DATA,\r\n    isClear,\r\n    change,\r\n    handleClose,\r\n    access,\r\n    titleModal,\r\n    load,\r\n  } = props;\r\n\r\n  const [dataGroup, setDataGroup] = useState({\r\n    _id: '',\r\n    name: '',\r\n    username: '',\r\n    coin: '',\r\n    role: 1,\r\n    status: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newDataGroup = {\r\n      ...dataGroup,\r\n      _id: DATA._id || '',\r\n      name: DATA.name || '',\r\n      username: DATA.username || '',\r\n      coin: DATA.coin || '',\r\n      role: DATA.role || 1,\r\n      status: DATA.status || false,\r\n    };\r\n\r\n    setDataGroup(newDataGroup);\r\n  }, [DATA, show]);\r\n\r\n  const onChange = (type, e) => {\r\n    const newDataGroup = { ...dataGroup };\r\n    newDataGroup[type] = e.target.value;\r\n    setDataGroup(newDataGroup);\r\n  };\r\n\r\n  const submitGroup = () => {\r\n    const data = {\r\n      ...dataGroup,\r\n      coin: dataGroup.coin && access == 'ADD' ? dataGroup.coin : 2000,\r\n      password: dataGroup.username,\r\n    };\r\n    delete data._id;\r\n    if (access === 'EDIT') {\r\n      delete data.username;\r\n      delete data.password;\r\n    }\r\n\r\n    if (access === 'ADD') {\r\n      RestfulUtils.post('http://localhost:3030/users', { ...data })\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (access === 'EDIT') {\r\n      RestfulUtils.patch('http://localhost:3030/users/' + dataGroup._id, {\r\n        ...data,\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      RestfulUtils.remove('http://localhost:3030/users/' + dataGroup._id)\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const render = () => {\r\n    let xhtml = null;\r\n    if (access === 'DELETE') {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={handleClose}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div\r\n                  className={\r\n                    access == 'VIEW' ? 'col-md-12 disable' : 'col-md-12 '\r\n                  }\r\n                  style={{ paddingTop: '11px' }}\r\n                >\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-12'>\r\n                      <h5 className=''>\r\n                        <b>{`Bạn có chắc chắn muốn xóa ${dataGroup.name}`}</b>\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input\r\n                        type='button'\r\n                        onClick={submitGroup}\r\n                        className='btn btn-primary'\r\n                        style={{ marginRight: 15 }}\r\n                        value={'Submit'}\r\n                        id='btnSubmit'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    } else {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={handleClose}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div\r\n                  className={\r\n                    access == 'VIEW' ? 'col-md-12 disable' : 'col-md-12 '\r\n                  }\r\n                  style={{ paddingTop: '11px' }}\r\n                >\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Họ và tên</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Họ và tên'}\r\n                        id='txtName'\r\n                        value={dataGroup.name}\r\n                        onChange={(e) => onChange('name', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Username</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        disabled={access == 'ADD' ? false : true}\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Username'}\r\n                        id='txtUsername'\r\n                        value={dataGroup.username}\r\n                        onChange={(e) => onChange('username', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Coin</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={'Coin'}\r\n                        id='txtCoin'\r\n                        value={dataGroup.coin}\r\n                        onChange={(e) => onChange('coin', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Quyền hạn</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <select\r\n                        className='form-control'\r\n                        onChange={(e) => onChange('role', e)}\r\n                      >\r\n                        <option\r\n                          selected={dataGroup.role == 1 ? true : false}\r\n                          value='1'\r\n                        >\r\n                          Học viên\r\n                        </option>\r\n                        <option\r\n                          selected={dataGroup.role == 2 ? true : false}\r\n                          value='2'\r\n                        >\r\n                          Biên tập viên\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Trạng thái</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <select\r\n                        className='form-control'\r\n                        onChange={(e) => onChange('status', e)}\r\n                      >\r\n                        <option\r\n                          selected={dataGroup.status ? true : false}\r\n                          value='true'\r\n                        >\r\n                          Hoạt động\r\n                        </option>\r\n                        <option\r\n                          selected={!dataGroup.status ? true : false}\r\n                          value='false'\r\n                        >\r\n                          Khóa\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input\r\n                        type='button'\r\n                        onClick={submitGroup}\r\n                        className='btn btn-primary'\r\n                        style={{ marginRight: 15 }}\r\n                        value={'Submit'}\r\n                        id='btnSubmit'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    }\r\n    return xhtml;\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <ToastContainer\r\n        position='bottom-right'\r\n        autoClose={2000}\r\n        closeOnClick\r\n        pauseOnHover\r\n      /> */}\r\n      {render()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDetail;\r\n","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Users\\Users.js",["123"],"/** @format */\r\n\r\nimport React, { useState } from 'react';\r\nimport UsersTable from './components/UsersTable.js';\r\nimport ModalDetail from './components/ModalDetail';\r\nfunction Users(props) {\r\n  const [DATA, setDATA] = useState({});\r\n  const [titleModal, setTitleModal] = useState('');\r\n  const [isClear, setIsClear] = useState(true);\r\n  const [loadgrid, setLoadgrid] = useState(true);\r\n  const [access, setAccess] = useState('ADD');\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleClose = () => setShowModal(false);\r\n\r\n  const showModalDetail = (access, DATAUPDATE) => {\r\n    let titleModal = '';\r\n    let DATA = '';\r\n\r\n    switch (access) {\r\n      case 'ADD':\r\n        titleModal = 'Thêm';\r\n        break;\r\n      case 'EDIT':\r\n        titleModal = 'Sửa';\r\n        break;\r\n      case 'VIEW':\r\n        titleModal = 'Chi tiết';\r\n        break;\r\n      case 'DELETE':\r\n        titleModal = 'Xóa';\r\n        break;\r\n    }\r\n    if (DATAUPDATE !== undefined) {\r\n      DATA = DATAUPDATE;\r\n    }\r\n\r\n    setShowModal(true);\r\n    setAccess(access);\r\n    setTitleModal(titleModal);\r\n    setDATA(DATA);\r\n    setIsClear(true);\r\n    setLoadgrid(false);\r\n  };\r\n  const change = () => {\r\n    setIsClear(false);\r\n  };\r\n  const load = () => {\r\n    setLoadgrid(true);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        borderColor: 'rgba(123, 102, 102, 0.43)',\r\n        padding: '10px',\r\n      }}\r\n      className='container panel panel-success margintopNewUI'\r\n    >\r\n      <div className='title-content'>Người dùng</div>\r\n      <div className='panel-body' style={{ padding: '10px 0' }}>\r\n        <UsersTable load={load} loadgrid={loadgrid} showModalDetail={showModalDetail} />\r\n      </div>\r\n\r\n      <ModalDetail\r\n        load={load}\r\n        show={showModal}\r\n        access={access}\r\n        DATA={DATA}\r\n        change={change}\r\n        isClear={isClear}\r\n        handleClose={handleClose}\r\n        titleModal={titleModal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n",["124","125"],"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\utils\\RestfulUtils.js",["126"],"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\App.js",["127","128"],"/** @format */\n\nimport DashBoard from './features/DashBoard';\nimport Login from './features/Login';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { loginState } from './recoil/appState';\nfunction App() {\n  //const login = true;\n  const [login, setLogin] = useRecoilState(loginState);\n\n  useEffect(() => {\n    const accessToken =\n      sessionStorage.getItem('accessToken') ||\n      localStorage.getItem('accessToken');\n    if (accessToken) {\n      setLogin(true);\n    } else {\n      setLogin(false);\n    }\n  }, [login]);\n\n  return (\n    <Router>\n      <div className='App'>\n        <Switch>\n          <Route exact path='/login'>\n            {!login ? <Login /> : <Redirect to='/' />}\n          </Route>\n          <Route path='/'>\n            {login ? <DashBoard /> : <Redirect to='/login' />}\n          </Route>\n        </Switch>\n\n        <ToastContainer\n          position='bottom-right'\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Login\\Login.js",["129","130"],"/** @format */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { loginState } from '../../recoil/appState';\r\nimport RestfulUtils from '../../utils/RestfulUtils';\r\nimport { toast } from 'react-toastify';\r\nimport { Checkbox } from 'react-bootstrap';\r\nfunction Login(props) {\r\n  const [login, setLogin] = useRecoilState(loginState);\r\n  const [dataGroup, setDataGroup] = useState({ username: '', password: '' });\r\n  const [remember, setRemember] = useState(false);\r\n  useEffect(() => {\r\n    const newDataGroup = { ...dataGroup, username: '', password: '' };\r\n    setDataGroup(newDataGroup);\r\n  }, []);\r\n\r\n  const onChange = (type, e) => {\r\n    const newDataGroup = { ...dataGroup };\r\n    newDataGroup[type] = e.target.value;\r\n    setDataGroup(newDataGroup);\r\n  };\r\n\r\n  const onChangeRemember = (e) => {\r\n    setRemember(e.target.value);\r\n  };\r\n\r\n  const submitGroup = () => {\r\n    const data = {\r\n      ...dataGroup,\r\n      strategy: 'local',\r\n    };\r\n\r\n    RestfulUtils.post('http://localhost:3030/authentication', { ...data })\r\n      .then((res) => {\r\n        if (!res.errors && res.status === 201) {\r\n          toast.success('Đăng nhập thành công');\r\n          sessionStorage.setItem('accessToken', res.data.accessToken);\r\n          sessionStorage.setItem('user', JSON.stringify(res.data.user));\r\n          if (remember) {\r\n            localStorage.setItem('accessToken', res.data.accessToken);\r\n            localStorage.setItem('user', JSON.stringify(res.data.user));\r\n          }\r\n\r\n          setLogin(true);\r\n        } else {\r\n          toast.error('Tài khoản hoặc mật khẩu không đúng');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('catch', error);\r\n      });\r\n  };\r\n  return (\r\n    <div\r\n      style={{ display: 'flex', justifyContent: 'center', marginTop: '150px' }}\r\n    >\r\n      <div\r\n        style={{\r\n          borderColor: 'rgba(123, 102, 102, 0.43)',\r\n          padding: '10px',\r\n        }}\r\n        className='panel col-md-6 col-12 panel-success'\r\n      >\r\n        <div className='title-content col-md-6'>Đăng nhập</div>\r\n        <div className='panel-body'>\r\n          <div className='add-info-account'>\r\n            <div className='col-md-12 ' style={{ paddingTop: '11px' }}>\r\n              <div className='col-md-12 row'>\r\n                <div className='col-md-3'>\r\n                  <h5 className='highlight'>\r\n                    <b>Tài khoản</b>\r\n                  </h5>\r\n                </div>\r\n                <div className='col-md-9'>\r\n                  <input\r\n                    maxLength={255}\r\n                    className='form-control'\r\n                    type='text'\r\n                    placeholder={'Tài khoản'}\r\n                    id='txtUsername'\r\n                    value={dataGroup.username}\r\n                    onChange={(e) => onChange('username', e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='col-md-12 row'>\r\n                <div className='col-md-3'>\r\n                  <h5 className='highlight'>\r\n                    <b>Mật khẩu</b>\r\n                  </h5>\r\n                </div>\r\n                <div className='col-md-9'>\r\n                  <input\r\n                    maxLength={255}\r\n                    className='form-control'\r\n                    type='password'\r\n                    placeholder={'Mật khẩu'}\r\n                    id='txtPassword'\r\n                    value={dataGroup.password}\r\n                    onChange={(e) => onChange('password', e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='col-md-12 row'>\r\n                <div className='col-md-3'>\r\n                  <Checkbox value={remember} onChange={onChangeRemember}>\r\n                    Nhớ đăng nhập\r\n                  </Checkbox>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='col-md-12 row'>\r\n                <div className='pull-right'>\r\n                  <input\r\n                    type='button'\r\n                    onClick={submitGroup}\r\n                    className='btn btn-primary'\r\n                    style={{ marginRight: 15 }}\r\n                    value={'Submit'}\r\n                    id='btnSubmit'\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\index.js",[],"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Users\\index.js",[],"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Login\\index.js",[],"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Lesson\\components\\ModalDetail.js",["131","132","133","134","135"],"/** @format */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ModalDetail(props) {\r\n  const {\r\n    show = false,\r\n    DATA,\r\n    isClear,\r\n    change,\r\n    handleClose,\r\n    access,\r\n    titleModal,\r\n    load,\r\n  } = props;\r\n\r\n  const [dataGroup, setDataGroup] = useState({\r\n    _id: '',\r\n    title: '',\r\n    url: '',\r\n    priority: '',\r\n    status: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newDataGroup = {\r\n      ...dataGroup,\r\n      _id: DATA._id || '',\r\n      title: DATA.title || '',\r\n      url: DATA.url || '',\r\n      priority: DATA.priority || '',\r\n      status: DATA.status || false,\r\n    };\r\n\r\n    setDataGroup(newDataGroup);\r\n  }, [DATA, show]);\r\n\r\n  const onChange = (type, e) => {\r\n    const newDataGroup = { ...dataGroup };\r\n    newDataGroup[type] = e.target.value;\r\n    setDataGroup(newDataGroup);\r\n  };\r\n\r\n  const submitGroup = () => {\r\n    const data = {\r\n      ...dataGroup,\r\n    };\r\n\r\n    if (access === 'ADD') {\r\n      RestfulUtils.post('http://localhost:3030/lessons', { ...data })\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            console.log(res);\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (access === 'EDIT') {\r\n      RestfulUtils.patch('http://localhost:3030/lessons/' + dataGroup._id, {\r\n        ...data,\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      RestfulUtils.remove('http://localhost:3030/lessons/' + dataGroup._id)\r\n        .then((res) => {\r\n          if (res.status === 201 || res.status === 200) {\r\n            toast.success('Thành công');\r\n            handleClose();\r\n            load();\r\n          } else {\r\n            toast.error(res.message);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const render = () => {\r\n    let xhtml = null;\r\n    if (access === 'DELETE') {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={handleClose}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div\r\n                  className={\r\n                    access == 'VIEW' ? 'col-md-12 disable' : 'col-md-12 '\r\n                  }\r\n                  style={{ paddingTop: '11px' }}\r\n                >\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-12'>\r\n                      <h5 className=''>\r\n                        <b>{`Bạn có chắc chắn muốn xóa ${dataGroup.title}`}</b>\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input\r\n                        type='button'\r\n                        onClick={submitGroup}\r\n                        className='btn btn-primary'\r\n                        style={{ marginRight: 15 }}\r\n                        value={'Submit'}\r\n                        id='btnSubmit'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    } else {\r\n      xhtml = (\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              <div className='title-content col-md-6'>\r\n                {titleModal}{' '}\r\n                <button type='button' className='close' onClick={handleClose}>\r\n                  <span aria-hidden='true'>×</span>\r\n                  <span className='sr-only'>Close</span>\r\n                </button>\r\n              </div>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ overflow: 'auto' }}>\r\n            <div className='panel-body'>\r\n              <div className='add-info-account'>\r\n                <div\r\n                  className={\r\n                    access == 'VIEW' ? 'col-md-12 disable' : 'col-md-12 '\r\n                  }\r\n                  style={{ paddingTop: '11px' }}\r\n                >\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className=''>\r\n                        <b>Tên bài học</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Họ và tên'}\r\n                        id='txtTitle'\r\n                        value={dataGroup.title}\r\n                        onChange={(e) => onChange('title', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Url</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        // disabled={access == 'ADD' ? false : true}\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder={'Url'}\r\n                        id='txtUrl'\r\n                        value={dataGroup.url}\r\n                        onChange={(e) => onChange('url', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Thứ tự</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <input\r\n                        maxLength={255}\r\n                        className='form-control'\r\n                        type='number'\r\n                        placeholder={'Thứ tự'}\r\n                        id='txtPriority'\r\n                        value={dataGroup.priority}\r\n                        onChange={(e) => onChange('priority', e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='col-md-3'>\r\n                      <h5 className='highlight'>\r\n                        <b>Trạng thái</b>\r\n                      </h5>\r\n                    </div>\r\n                    <div className='col-md-9'>\r\n                      <select\r\n                        className='form-control'\r\n                        onChange={(e) => onChange('status', e)}\r\n                      >\r\n                        <option\r\n                          selected={dataGroup.status ? true : false}\r\n                          value='true'\r\n                        >\r\n                          Hoạt động\r\n                        </option>\r\n                        <option\r\n                          selected={!dataGroup.status ? true : false}\r\n                          value='false'\r\n                        >\r\n                          Khóa\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-12 row'>\r\n                    <div className='pull-right'>\r\n                      <input\r\n                        type='button'\r\n                        onClick={submitGroup}\r\n                        className='btn btn-primary'\r\n                        style={{ marginRight: 15 }}\r\n                        value={'Submit'}\r\n                        id='btnSubmit'\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      );\r\n    }\r\n    return xhtml;\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <ToastContainer\r\n        position='bottom-right'\r\n        autoClose={2000}\r\n        closeOnClick\r\n        pauseOnHover\r\n      /> */}\r\n      {render()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDetail;\r\n","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Lesson\\Lesson.js",["136"],"/** @format */\r\n\r\nimport React, { useState } from 'react';\r\nimport LessonTable from './components/LessonTable.js';\r\nimport ModalDetail from './components/ModalDetail';\r\nfunction Lesson(props) {\r\n  const [DATA, setDATA] = useState({});\r\n  const [titleModal, setTitleModal] = useState('');\r\n  const [isClear, setIsClear] = useState(true);\r\n  const [loadgrid, setLoadgrid] = useState(true);\r\n  const [access, setAccess] = useState('ADD');\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleClose = () => setShowModal(false);\r\n\r\n  const showModalDetail = (access, DATAUPDATE) => {\r\n    let titleModal = '';\r\n    let DATA = '';\r\n\r\n    switch (access) {\r\n      case 'ADD':\r\n        titleModal = 'Thêm';\r\n        break;\r\n      case 'EDIT':\r\n        titleModal = 'Sửa';\r\n        break;\r\n      case 'VIEW':\r\n        titleModal = 'Chi tiết';\r\n        break;\r\n      case 'DELETE':\r\n        titleModal = 'Xóa';\r\n        break;\r\n    }\r\n    if (DATAUPDATE !== undefined) {\r\n      DATA = DATAUPDATE;\r\n    }\r\n\r\n    setShowModal(true);\r\n    setAccess(access);\r\n    setTitleModal(titleModal);\r\n    setDATA(DATA);\r\n    setIsClear(true);\r\n    setLoadgrid(false);\r\n  };\r\n  const change = () => {\r\n    setIsClear(false);\r\n  };\r\n  const load = () => {\r\n    setLoadgrid(true);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        borderColor: 'rgba(123, 102, 102, 0.43)',\r\n        padding: '10px',\r\n      }}\r\n      className='container panel panel-success margintopNewUI'\r\n    >\r\n      <div className='title-content'>Bài học</div>\r\n      <div className='panel-body' style={{ padding: '10px 0' }}>\r\n        <LessonTable load={load} loadgrid={loadgrid} showModalDetail={showModalDetail} />\r\n      </div>\r\n\r\n      <ModalDetail\r\n        load={load}\r\n        show={showModal}\r\n        access={access}\r\n        DATA={DATA}\r\n        change={change}\r\n        isClear={isClear}\r\n        handleClose={handleClose}\r\n        titleModal={titleModal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lesson;\r\n","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Lesson\\components\\LessonTable.js",["137","138","139"],"/** @format */\r\n\r\nimport { matchSorter } from 'match-sorter';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-6';\r\nimport 'react-table-6/react-table.css';\r\nimport { toast } from 'react-toastify';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nfunction LessonTable(props) {\r\n  const { showModalDetail, loadgrid, load } = props;\r\n  const [data, setData] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const onClickRow = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onDoubleClick: (e, t) => {\r\n        showModalDetail('VIEW', rowInfo.row._original);\r\n      },\r\n      style: {},\r\n    };\r\n  };\r\n  const handleEdit = (row) => {\r\n    return showModalDetail('EDIT', row.row._original);\r\n  };\r\n\r\n  const handleDelete = (row) => {\r\n    return showModalDetail('DELETE', row.row._original);\r\n  };\r\n\r\n  useEffect(() => {\r\n    feedData();\r\n  }, [loadgrid]);\r\n\r\n  const feedData = () => {\r\n    RestfulUtils.get('http://localhost:3030/lessons').then((res) => {\r\n      if (res.status == 200) {\r\n        setData(res.data.data);\r\n        setTotal(res.data.total);\r\n      } else {\r\n        if (res.code === 401) {\r\n          toast.error('Phiên bản hết hạn', { position: 'top-center' });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div\r\n          style={{ padding: 0, marginBottom: '10px' }}\r\n          className='col-md-10 '\r\n        >\r\n          <button\r\n            className='btn btn-primary'\r\n            onClick={() => showModalDetail('ADD')}\r\n            style={{ marginLeft: '15px' }}\r\n          >\r\n            <i class='fas fa-plus' style={{ marginRight: '5px' }}></i>\r\n            Thêm\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ textAlign: 'right' }} className='col-md-2 RightInfo'>\r\n          <h5 className='highlight' style={{ fontWeight: 'bold' }}>\r\n            <i className='fas fa-edit' style={{ textAlign: 'left' }}></i>\r\n            {'Tổng'} {total}\r\n            <span\r\n              style={{ marginLeft: '5px' }}\r\n              className='ReloadButton'\r\n              onClick={() => console.log('asdf')}\r\n            >\r\n              <i class='fas fa-sync-alt'></i>\r\n            </span>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='col-md-12' style={{ padding: 0 }}>\r\n        <ReactTable\r\n          style={{\r\n            borderWidth: '1px',\r\n            borderColor: '#aaaaaa',\r\n            borderStyle: 'solid',\r\n          }}\r\n          data={data}\r\n          filterable\r\n          defaultFilterMethod={(filter, row) =>\r\n            String(row[filter.id]) === filter.value\r\n          }\r\n          columns={[\r\n            {\r\n              Header: 'STT',\r\n              id: 'index',\r\n              maxWidth: 50,\r\n              filterable: false,\r\n              Cell: (row) => {\r\n                return (\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <b style={{ marginRight: '10px' }}> {row.index}</b>\r\n                    <span onClick={() => handleEdit(row)} className=''>\r\n                      <i class='far fa-edit'></i>\r\n                    </span>\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Tên bài học\r\n                </div>\r\n              ),\r\n              id: 'title',\r\n              accessor: 'title',\r\n              filterMethod: (filter, rows) =>\r\n                // row[filter.id].startsWith(filter.value) &&\r\n                // row[filter.id].endsWith(filter.value),\r\n                matchSorter(rows, filter.value, { keys: ['title'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  url\r\n                </div>\r\n              ),\r\n              id: 'url',\r\n              accessor: 'url',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['url'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblName'>\r\n                  Thứ tự\r\n                </div>\r\n              ),\r\n              id: 'priority',\r\n              accessor: 'priority',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['priority'] }),\r\n              filterAll: true,\r\n            },\r\n\r\n            {\r\n              Header: 'Status',\r\n              id: 'status',\r\n              accessor: 'status',\r\n              Cell: ({ value }) => (value ? 'Active' : 'Blook'),\r\n              filterMethod: (filter, row) => {\r\n                if (filter.value === 'all') {\r\n                  return true;\r\n                }\r\n                if (filter.value === 'true') {\r\n                  return row[filter.id] === true;\r\n                }\r\n                return row[filter.id] === false;\r\n              },\r\n              Filter: ({ filter, onChange }) => (\r\n                <select\r\n                  onChange={(event) => onChange(event.target.value)}\r\n                  style={{ width: '100%' }}\r\n                  value={filter ? filter.value : 'all'}\r\n                >\r\n                  <option value='all'>Hiển thị tất cả</option>\r\n                  <option value='true'>Hoạt động</option>\r\n                  <option value='false'>Khóa</option>\r\n                </select>\r\n              ),\r\n            },\r\n            {\r\n              Header: 'Xóa',\r\n              id: '_id',\r\n\r\n              Cell: (row) => (\r\n                <div style={{ textAlign: 'center', color: 'red' }}>\r\n                  <span onClick={() => handleDelete(row)} className=''>\r\n                    <i className='far fa-trash-alt'></i>\r\n                  </span>\r\n                </div>\r\n              ),\r\n              filterable: false,\r\n            },\r\n          ]}\r\n          getTheadTrProps={() => {\r\n            return {\r\n              className: 'head',\r\n            };\r\n          }}\r\n          getTrProps={onClickRow}\r\n          defaultPageSize={10}\r\n          noDataText={'Không có dữ liệu'}\r\n          pageText={'Trang'}\r\n          rowsText={'Dòng'}\r\n          previousText={'Lùi'}\r\n          nextText={'Tiến'}\r\n          className='-striped -highlight'\r\n          style={{\r\n            maxHeight: '600px', // This will force the table body to overflow and scroll, since there is not enough room\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LessonTable;\r\n","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Courses\\components\\ModalDetail.js",["140","141","142","143","144","145","146","147","148","149","150"],"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Courses\\components\\CoursesTable.js",["151","152","153"],"/** @format */\r\n\r\nimport { matchSorter } from 'match-sorter';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactTable from 'react-table-6';\r\nimport 'react-table-6/react-table.css';\r\nimport { toast } from 'react-toastify';\r\nimport RestfulUtils from '../../../utils/RestfulUtils';\r\nfunction CoursesTable(props) {\r\n  const { showModalDetail, loadgrid, load } = props;\r\n  const [data, setData] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const onClickRow = (state, rowInfo, column, instance) => {\r\n    return {\r\n      onDoubleClick: (e, t) => {\r\n        showModalDetail('VIEW', rowInfo.row._original);\r\n      },\r\n      style: {},\r\n    };\r\n  };\r\n  const handleEdit = (row) => {\r\n    return showModalDetail('EDIT', row.row._original);\r\n  };\r\n\r\n  const handleDelete = (row) => {\r\n    return showModalDetail('DELETE', row.row._original);\r\n  };\r\n\r\n  useEffect(() => {\r\n    feedData();\r\n  }, [loadgrid]);\r\n\r\n  \r\n  const feedData = () => {\r\n    RestfulUtils.get('http://localhost:3030/courses?[$populate]=lessons&[$populate]=users').then((res) => {\r\n      if (res.status == 200) {\r\n        setData(res.data.data);\r\n        setTotal(res.data.total);\r\n      } else {\r\n        if (res.code === 401) {\r\n          toast.error('Phiên bản hết hạn', { position: 'top-center' });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div\r\n          style={{ padding: 0, marginBottom: '10px' }}\r\n          className='col-md-10 '\r\n        >\r\n          <button\r\n            className='btn btn-primary'\r\n            onClick={() => showModalDetail('ADD')}\r\n            style={{ marginLeft: '15px' }}\r\n          >\r\n            <i class='fas fa-plus' style={{ marginRight: '5px' }}></i>\r\n            Thêm\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ textAlign: 'right' }} className='col-md-2 RightInfo'>\r\n          <h5 className='highlight' style={{ fontWeight: 'bold' }}>\r\n            <i className='fas fa-edit' style={{ textAlign: 'left' }}></i>\r\n            {'Tổng'} {total}\r\n            <span\r\n              style={{ marginLeft: '5px' }}\r\n              className='ReloadButton'\r\n              onClick={() => console.log('asdf')}\r\n            >\r\n              <i class='fas fa-sync-alt'></i>\r\n            </span>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='col-md-12' style={{ padding: 0 }}>\r\n        <ReactTable\r\n          style={{\r\n            borderWidth: '1px',\r\n            borderColor: '#aaaaaa',\r\n            borderStyle: 'solid',\r\n          }}\r\n          data={data}\r\n          filterable\r\n          defaultFilterMethod={(filter, row) =>\r\n            String(row[filter.id]) === filter.value\r\n          }\r\n          columns={[\r\n            {\r\n              Header: 'STT',\r\n              id: 'index',\r\n              maxWidth: 50,\r\n              filterable: false,\r\n              Cell: (row) => {\r\n                return (\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <b style={{ marginRight: '10px' }}> {row.index}</b>\r\n                    <span onClick={() => handleEdit(row)} className=''>\r\n                      <i class='far fa-edit'></i>\r\n                    </span>\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblTitle'>\r\n                  Tên khóa học\r\n                </div>\r\n              ),\r\n              accessor: 'title',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['title'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblTeacher'>\r\n                  Giáo viên dạy\r\n                </div>\r\n              ),\r\n              id: 'teacher',\r\n              accessor: 'teacher',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['teacher'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: (\r\n                <div className='wordwrap' id='lblPrice'>\r\n                  Giá cả\r\n                </div>\r\n              ),\r\n              id: 'price',\r\n              accessor: 'price',\r\n              filterMethod: (filter, rows) =>\r\n                matchSorter(rows, filter.value, { keys: ['price'] }),\r\n              filterAll: true,\r\n            },\r\n            {\r\n              Header: 'Status',\r\n              id: 'status',\r\n              accessor: 'status',\r\n              Cell: ({ value }) => (value ? 'Active' : 'Blook'),\r\n              filterMethod: (filter, row) => {\r\n                if (filter.value === 'all') {\r\n                  return true;\r\n                }\r\n                if (filter.value === 'true') {\r\n                  return row[filter.id] === true;\r\n                }\r\n                return row[filter.id] === false;\r\n              },\r\n              Filter: ({ filter, onChange }) => (\r\n                <select\r\n                  onChange={(event) => onChange(event.target.value)}\r\n                  style={{ width: '100%' }}\r\n                  value={filter ? filter.value : 'all'}\r\n                >\r\n                  <option value='all'>Hiển thị tất cả</option>\r\n                  <option value='true'>Hoạt động</option>\r\n                  <option value='false'>Khóa</option>\r\n                </select>\r\n              ),\r\n            },\r\n            {\r\n              Header: 'Xóa',\r\n              id: '_id',\r\n\r\n              Cell: (row) => (\r\n                <div style={{ textAlign: 'center', color: 'red' }}>\r\n                  <span onClick={() => handleDelete(row)} className=''>\r\n                    <i className='far fa-trash-alt'></i>\r\n                  </span>\r\n                </div>\r\n              ),\r\n              filterable: false,\r\n            },\r\n          ]}\r\n          getTheadTrProps={() => {\r\n            return {\r\n              className: 'head',\r\n            };\r\n          }}\r\n          getTrProps={onClickRow}\r\n          defaultPageSize={10}\r\n          noDataText={'Không có dữ liệu'}\r\n          pageText={'Trang'}\r\n          rowsText={'Dòng'}\r\n          previousText={'Lùi'}\r\n          nextText={'Tiến'}\r\n          className='-striped -highlight'\r\n          style={{\r\n            maxHeight: '600px', // This will force the table body to overflow and scroll, since there is not enough room\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CoursesTable;\r\n","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Lesson\\index.js",[],"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Courses\\Courses.js",["154"],"/** @format */\r\n\r\nimport React, { useState } from 'react';\r\nimport CoursesTable from './components/CoursesTable.js';\r\nimport ModalDetail from './components/ModalDetail';\r\nfunction Users(props) {\r\n  const [DATA, setDATA] = useState({});\r\n  const [titleModal, setTitleModal] = useState('');\r\n  const [isClear, setIsClear] = useState(true);\r\n  const [loadgrid, setLoadgrid] = useState(true);\r\n  const [access, setAccess] = useState('ADD');\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleClose = () => setShowModal(false);\r\n\r\n  const showModalDetail = (access, DATAUPDATE) => {\r\n    let titleModal = '';\r\n    let DATA = '';\r\n\r\n    switch (access) {\r\n      case 'ADD':\r\n        titleModal = 'Thêm';\r\n        break;\r\n      case 'EDIT':\r\n        titleModal = 'Sửa';\r\n        break;\r\n      case 'VIEW':\r\n        titleModal = 'Chi tiết';\r\n        break;\r\n      case 'DELETE':\r\n        titleModal = 'Xóa';\r\n        break;\r\n    }\r\n    if (DATAUPDATE !== undefined) {\r\n      DATA = DATAUPDATE;\r\n    }\r\n\r\n    setShowModal(true);\r\n    setAccess(access);\r\n    setTitleModal(titleModal);\r\n    setDATA(DATA);\r\n    setIsClear(true);\r\n    setLoadgrid(false);\r\n  };\r\n  const change = () => {\r\n    setIsClear(false);\r\n  };\r\n  const load = () => {\r\n    setLoadgrid(true);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        borderColor: 'rgba(123, 102, 102, 0.43)',\r\n        padding: '10px',\r\n      }}\r\n      className='container panel panel-success margintopNewUI'\r\n    >\r\n      <div className='title-content'>Người dùng</div>\r\n      <div className='panel-body' style={{ padding: '10px 0' }}>\r\n        <CoursesTable load={load} loadgrid={loadgrid} showModalDetail={showModalDetail} />\r\n      </div>\r\n\r\n      <ModalDetail\r\n        load={load}\r\n        show={showModal}\r\n        access={access}\r\n        DATA={DATA}\r\n        change={change}\r\n        isClear={isClear}\r\n        handleClose={handleClose}\r\n        titleModal={titleModal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\DashBoard\\Menu.js",["155"],"/** @format */\r\n\r\nimport React from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { loginState } from '../../recoil/appState';\r\n\r\nfunction Menu(props) {\r\n  const [login, setLogin] = useRecoilState(loginState);\r\n  const userString =\r\n    sessionStorage.getItem('user') || localStorage.getItem('user');\r\n  const user = userString ? JSON.parse(userString) : '';\r\n  const logout = () => {\r\n    sessionStorage.removeItem('accessToken');\r\n    localStorage.removeItem('accessToken');\r\n    sessionStorage.removeItem('user');\r\n    localStorage.removeItem('user');\r\n    setLogin(false);\r\n  };\r\n  return (\r\n    <header>\r\n      <nav className='navbar navbar-default'>\r\n        <div className='container-fluid' style={{ display: 'flex' }}>\r\n          <div style={{ flexGrow: '3' }}>\r\n            <div className='navbar-header'>\r\n              <NavLink className='navbar-brand' to='/'>\r\n                2T-Education\r\n              </NavLink>\r\n            </div>\r\n            <ul className='nav navbar-nav'>\r\n              <li>\r\n                <NavLink\r\n                  exact\r\n                  to='/'\r\n                  activeStyle={{\r\n                    fontWeight: 'bold',\r\n                    color: 'red',\r\n                  }}\r\n                >\r\n                  Trang chủ\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to='/users'\r\n                  activeStyle={{\r\n                    fontWeight: 'bold',\r\n                    color: 'red',\r\n                  }}\r\n                >\r\n                  Người dùng\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to='/lessons'\r\n                  activeStyle={{\r\n                    fontWeight: 'bold',\r\n                    color: 'red',\r\n                  }}\r\n                >\r\n                  Bài học\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to='/courses'\r\n                  activeStyle={{\r\n                    fontWeight: 'bold',\r\n                    color: 'red',\r\n                  }}\r\n                >\r\n                  Khóa học\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div\r\n            className=''\r\n            style={{\r\n              textAlign: 'center',\r\n              flexGrow: '1',\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              padding: '10px',\r\n            }}\r\n          >\r\n            <h5 style={{ fontWeight: 'bold', marginRight: '10px' }}>\r\n              {user.name}\r\n            </h5>\r\n            <button className='btn btn-danger' onClick={logout}>\r\n              Đăng xuất\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\recoil\\appState.js",[],"D:\\BaiTapCuoiKi\\cms-hoc-online\\src\\features\\Courses\\index.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"156","replacedBy":"160"},{"ruleId":"158","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":4,"column":27,"nodeType":"164","messageId":"165","endLine":4,"endColumn":33},{"ruleId":"162","severity":1,"message":"166","line":4,"column":50,"nodeType":"164","messageId":"165","endLine":4,"endColumn":54},{"ruleId":"162","severity":1,"message":"167","line":10,"column":38,"nodeType":"164","messageId":"165","endLine":10,"endColumn":42},{"ruleId":"168","severity":1,"message":"169","line":35,"column":22,"nodeType":"170","messageId":"171","endLine":35,"endColumn":24},{"ruleId":"168","severity":1,"message":"169","line":164,"column":43,"nodeType":"170","messageId":"171","endLine":164,"endColumn":45},{"ruleId":"172","severity":1,"message":"173","line":239,"column":11,"nodeType":"174","endLine":241,"endColumn":13},{"ruleId":"162","severity":1,"message":"175","line":12,"column":5,"nodeType":"164","messageId":"165","endLine":12,"endColumn":12},{"ruleId":"162","severity":1,"message":"176","line":13,"column":5,"nodeType":"164","messageId":"165","endLine":13,"endColumn":11},{"ruleId":"177","severity":1,"message":"178","line":41,"column":6,"nodeType":"179","endLine":41,"endColumn":18,"suggestions":"180"},{"ruleId":"168","severity":1,"message":"169","line":52,"column":38,"nodeType":"170","messageId":"171","endLine":52,"endColumn":40},{"ruleId":"168","severity":1,"message":"169","line":129,"column":28,"nodeType":"170","messageId":"171","endLine":129,"endColumn":30},{"ruleId":"168","severity":1,"message":"169","line":178,"column":28,"nodeType":"170","messageId":"171","endLine":178,"endColumn":30},{"ruleId":"168","severity":1,"message":"169","line":209,"column":42,"nodeType":"170","messageId":"171","endLine":209,"endColumn":44},{"ruleId":"168","severity":1,"message":"169","line":252,"column":52,"nodeType":"170","messageId":"171","endLine":252,"endColumn":54},{"ruleId":"168","severity":1,"message":"169","line":258,"column":52,"nodeType":"170","messageId":"171","endLine":258,"endColumn":54},{"ruleId":"181","severity":1,"message":"182","line":20,"column":5,"nodeType":"183","messageId":"184","endLine":33,"endColumn":6},{"ruleId":"156","replacedBy":"185"},{"ruleId":"158","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":11,"column":1,"nodeType":"189","endLine":77,"endColumn":3},{"ruleId":"162","severity":1,"message":"190","line":7,"column":21,"nodeType":"164","messageId":"165","endLine":7,"endColumn":29},{"ruleId":"177","severity":1,"message":"191","line":29,"column":6,"nodeType":"179","endLine":29,"endColumn":13,"suggestions":"192"},{"ruleId":"162","severity":1,"message":"193","line":10,"column":10,"nodeType":"164","messageId":"165","endLine":10,"endColumn":15},{"ruleId":"177","severity":1,"message":"178","line":16,"column":6,"nodeType":"179","endLine":16,"endColumn":8,"suggestions":"194"},{"ruleId":"162","severity":1,"message":"175","line":12,"column":5,"nodeType":"164","messageId":"165","endLine":12,"endColumn":12},{"ruleId":"162","severity":1,"message":"176","line":13,"column":5,"nodeType":"164","messageId":"165","endLine":13,"endColumn":11},{"ruleId":"177","severity":1,"message":"178","line":39,"column":6,"nodeType":"179","endLine":39,"endColumn":18,"suggestions":"195"},{"ruleId":"168","severity":1,"message":"169","line":121,"column":28,"nodeType":"170","messageId":"171","endLine":121,"endColumn":30},{"ruleId":"168","severity":1,"message":"169","line":170,"column":28,"nodeType":"170","messageId":"171","endLine":170,"endColumn":30},{"ruleId":"181","severity":1,"message":"182","line":20,"column":5,"nodeType":"183","messageId":"184","endLine":33,"endColumn":6},{"ruleId":"162","severity":1,"message":"167","line":10,"column":38,"nodeType":"164","messageId":"165","endLine":10,"endColumn":42},{"ruleId":"168","severity":1,"message":"169","line":35,"column":22,"nodeType":"170","messageId":"171","endLine":35,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":198,"column":11,"nodeType":"174","endLine":200,"endColumn":13},{"ruleId":"162","severity":1,"message":"175","line":13,"column":5,"nodeType":"164","messageId":"165","endLine":13,"endColumn":12},{"ruleId":"162","severity":1,"message":"176","line":14,"column":5,"nodeType":"164","messageId":"165","endLine":14,"endColumn":11},{"ruleId":"177","severity":1,"message":"178","line":58,"column":6,"nodeType":"179","endLine":58,"endColumn":18,"suggestions":"196"},{"ruleId":"168","severity":1,"message":"169","line":197,"column":28,"nodeType":"170","messageId":"171","endLine":197,"endColumn":30},{"ruleId":"168","severity":1,"message":"169","line":250,"column":28,"nodeType":"170","messageId":"171","endLine":250,"endColumn":30},{"ruleId":"168","severity":1,"message":"169","line":317,"column":35,"nodeType":"170","messageId":"171","endLine":317,"endColumn":37},{"ruleId":"168","severity":1,"message":"169","line":330,"column":34,"nodeType":"170","messageId":"171","endLine":330,"endColumn":36},{"ruleId":"168","severity":1,"message":"169","line":342,"column":46,"nodeType":"170","messageId":"171","endLine":342,"endColumn":48},{"ruleId":"168","severity":1,"message":"169","line":366,"column":35,"nodeType":"170","messageId":"171","endLine":366,"endColumn":37},{"ruleId":"168","severity":1,"message":"169","line":377,"column":34,"nodeType":"170","messageId":"171","endLine":377,"endColumn":36},{"ruleId":"168","severity":1,"message":"169","line":389,"column":46,"nodeType":"170","messageId":"171","endLine":389,"endColumn":48},{"ruleId":"162","severity":1,"message":"167","line":10,"column":38,"nodeType":"164","messageId":"165","endLine":10,"endColumn":42},{"ruleId":"168","severity":1,"message":"169","line":36,"column":22,"nodeType":"170","messageId":"171","endLine":36,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":195,"column":11,"nodeType":"174","endLine":197,"endColumn":13},{"ruleId":"181","severity":1,"message":"182","line":20,"column":5,"nodeType":"183","messageId":"184","endLine":33,"endColumn":6},{"ruleId":"162","severity":1,"message":"193","line":9,"column":10,"nodeType":"164","messageId":"165","endLine":9,"endColumn":15},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],["197"],["198"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'load' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'isClear' is assigned a value but never used.","'change' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataGroup'. Either include it or remove the dependency array.","ArrayExpression",["199"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["197"],["198"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'setLogin'. Either include it or remove the dependency array.",["200"],"'login' is assigned a value but never used.",["201"],["202"],["203"],"no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"204","fix":"210"},{"desc":"204","fix":"211"},"Update the dependencies array to be: [DATA, dataGroup, show]",{"range":"212","text":"213"},"Update the dependencies array to be: [login, setLogin]",{"range":"214","text":"215"},"Update the dependencies array to be: [dataGroup]",{"range":"216","text":"217"},{"range":"218","text":"213"},{"range":"219","text":"213"},[851,863],"[DATA, dataGroup, show]",[749,756],"[login, setLogin]",[650,652],"[dataGroup]",[808,820],[1453,1465]]